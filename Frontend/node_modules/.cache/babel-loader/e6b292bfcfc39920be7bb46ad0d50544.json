{"ast":null,"code":"import _toConsumableArray from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/src/Pages/Accounts/EditProfile.js\";\nimport React, { Fragment, useCallback, useEffect, useRef, useState, useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ThemeOptions from \"../../Layout/ThemeOptions\";\nimport AppHeader from \"../../Layout/AppHeader\";\nimport { FormGroup, Label, CustomInput, Input, Col, Form, FormText, Button, Alert, ListGroup, ListGroupItem, CloseButton } from \"reactstrap\";\nimport avatar1 from \"../../assets/utils/images/avatars/2.jpg\";\nimport course1 from \"../../assets/utils/images/courses/course-1.jpg\";\nimport image1 from \"../../assets/images/slider-img1.jpg\";\nimport image2 from \"../../assets/images/slider-img2.jpg\";\nimport image3 from \"../../assets/images/slider-img3.jpg\";\nimport { useHistory, useParams } from \"react-router\";\nimport http from \"../../redux/utils/http\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport axios from \"axios\";\nimport { GetAllLanguageAction, GetAllTechnologyAction, GetFreeTimeAction, GetAllMajorAction } from \"../../redux/masterdata/masterDataAction\";\nimport { updateAction } from \"../../redux/actions/account/accountAction\";\nimport { toastErrorText, toastSuccessText } from \"../../helpers/toastify\";\nexport default function EditProfile() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var auth = useSelector(function (state) {\n    return state.accountReducer.user;\n  });\n\n  var _useState = useState({\n    city_id: \"\",\n    city: \"\",\n    district_id: \"\",\n    district: \"\",\n    ward_id: \"\",\n    ward: \"\",\n    learnerLevel: \"\",\n    language: \"\",\n    jobNow: \"s\",\n    technologySkill: \"\",\n    feeMax: \"\",\n    feeMaxText: \"\",\n    freeTime: [],\n    futureSelfDevelopment: \"\",\n    fieldOfStudy: \"\",\n    address1: \"\",\n    cities: [],\n    districts: [],\n    wards: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      DTO = _useState2[0],\n      setDTO = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.masterdataReducer;\n  }),\n      lsLanguage = _useSelector.lsLanguage,\n      lsFreeTime = _useSelector.lsFreeTime,\n      lsTechnology = _useSelector.lsTechnology,\n      lsMajor = _useSelector.lsMajor;\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      techSkill = _useState4[0],\n      settechSkill = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      language = _useState6[0],\n      setlanguage = _useState6[1]; // const [freeTime, setFreeTime] = useState([])\n\n\n  var _useState7 = useState(['Less 5 millions VND', 'From 5 to 15 millions VND', 'From 15 to 30 millions VND', 'From 30 to 50 millions VND']),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lstFeeMax = _useState8[0],\n      setLstFeeMax = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cities = _useState10[0],\n      setCities = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      districts = _useState12[0],\n      setDistricts = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      wards = _useState14[0],\n      setWards = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  var weekdays = [{\n    key: '2',\n    text: 'Monday'\n  }, {\n    key: '3',\n    text: 'Tuesday'\n  }, {\n    key: '4',\n    text: 'Wednesday'\n  }, {\n    key: '5',\n    text: 'Thursday'\n  }, {\n    key: '6',\n    text: 'Friday'\n  }, {\n    key: '7',\n    text: 'Saturday'\n  }, {\n    key: 'CN',\n    text: 'Sunday'\n  }];\n\n  var _useState17 = useState(\"00:00\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      timeStart = _useState18[0],\n      setTimeStart = _useState18[1];\n\n  var _useState19 = useState(\"23:59\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      timeEnd = _useState20[0],\n      setTimeEnd = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      weekday = _useState22[0],\n      setWeekday = _useState22[1];\n\n  useLayoutEffect(function () {\n    var updateCities = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$axios$get, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"https://vapi.vnappmob.com/api/province/\");\n\n              case 2:\n                _yield$axios$get = _context.sent;\n                data = _yield$axios$get.data;\n                // setCities(data.results);\n                setDTO(function (pre) {\n                  return _objectSpread({}, pre, {\n                    cities: data.results\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function updateCities() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    updateCities();\n  }, []);\n  useEffect(function () {\n    setDTO(function (prev) {\n      return _objectSpread({}, prev, {\n        technologySkill: [{\n          techName: \"API\"\n        }, {\n          techName: \"AI\"\n        }],\n        feeMax: auth.feeMax,\n        learnerLevel: auth.learnerLevel,\n        futureSelfDevelopment: auth.futureSelfDevelopment,\n        jobNow: auth.jobNow,\n        address1: auth.address1 || '',\n        fieldOfStudy: auth.fieldOfStudy\n      });\n    });\n\n    if (auth.freeTime) {\n      var freeTimes = auth.freeTime.split('|');\n      setDTO(function (prev) {\n        return _objectSpread({}, prev, {\n          freeTime: freeTimes\n        });\n      });\n    }\n\n    if (auth.language) {\n      setlanguage(auth.language.split(', ').map(function (el) {\n        return {\n          lanName: el\n        };\n      }));\n    }\n\n    if (auth.technologySkill) {\n      settechSkill(auth.technologySkill.split(', ').map(function (el) {\n        return {\n          techName: el\n        };\n      }));\n    }\n  }, [auth]);\n  useEffect(function () {\n    if (auth.address && DTO.cities) {\n      var address = auth.address.split(', ');\n\n      if (address[2]) {\n        var cityIndex = DTO.cities.findIndex(function (el) {\n          return el.province_name.indexOf(address[2]) !== -1;\n        });\n\n        if (cityIndex !== -1) {\n          getDistricts(DTO.cities[cityIndex].province_id, {\n            city_id: cityIndex,\n            city: DTO.cities[cityIndex].province_name,\n            district_text: address[1],\n            ward_text: address[0]\n          });\n        }\n      }\n    }\n  }, [DTO.cities]);\n  useEffect(function () {\n    dispatch(GetAllLanguageAction());\n    dispatch(GetAllTechnologyAction());\n    dispatch(GetFreeTimeAction());\n    dispatch(GetAllMajorAction());\n  }, []);\n\n  var getDistricts = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id, params) {\n      var _yield$axios$get2, data, districtIndex;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get(\"https://vapi.vnappmob.com/api/province/district/\".concat(id));\n\n            case 2:\n              _yield$axios$get2 = _context2.sent;\n              data = _yield$axios$get2.data;\n\n              if (!(params.district_text && data.results)) {\n                _context2.next = 13;\n                break;\n              }\n\n              districtIndex = data.results.findIndex(function (el) {\n                return el.district_name.indexOf(params.district_text) !== -1;\n              });\n\n              if (!(districtIndex !== -1)) {\n                _context2.next = 11;\n                break;\n              }\n\n              getWards(data.results[districtIndex].district_id, _objectSpread({}, params, {\n                district_id: districtIndex,\n                district: data.results[districtIndex].district_name,\n                districts: data.results\n              }));\n              return _context2.abrupt(\"return\");\n\n            case 11:\n              setDTO(function (pre) {\n                return _objectSpread({}, pre, params, {\n                  districts: data.results\n                });\n              });\n              return _context2.abrupt(\"return\");\n\n            case 13:\n              setDTO(function (pre) {\n                return _objectSpread({}, pre, params, {\n                  districts: data.results\n                });\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getDistricts(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getWards = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, params) {\n      var _yield$axios$get3, data, wardIndex;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.get(\"https://vapi.vnappmob.com/api/province/ward/\".concat(id));\n\n            case 2:\n              _yield$axios$get3 = _context3.sent;\n              data = _yield$axios$get3.data;\n\n              if (!(params.ward_text && data.results)) {\n                _context3.next = 13;\n                break;\n              }\n\n              wardIndex = data.results.findIndex(function (el) {\n                return el.ward_name.indexOf(params.ward_text) !== -1;\n              });\n\n              if (!(wardIndex !== -1)) {\n                _context3.next = 11;\n                break;\n              }\n\n              setDTO(function (pre) {\n                return _objectSpread({}, pre, params, {\n                  wards: data.results,\n                  ward: data.results[wardIndex].ward_name,\n                  ward_id: wardIndex\n                });\n              });\n              return _context3.abrupt(\"return\");\n\n            case 11:\n              setDTO(function (pre) {\n                return _objectSpread({}, pre, params, {\n                  wards: data.results\n                });\n              });\n              return _context3.abrupt(\"return\");\n\n            case 13:\n              setDTO(function (pre) {\n                return _objectSpread({}, pre, params, {\n                  wards: data.results\n                });\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getWards(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  function onClickUpdate() {\n    if (checkSecondStep() == false) {\n      return;\n    }\n\n    var addressArray = [];\n\n    if (DTO.ward) {\n      addressArray.push(DTO.ward);\n    }\n\n    if (DTO.district) {\n      addressArray.push(DTO.district);\n    }\n\n    if (DTO.city) {\n      addressArray.push(DTO.city);\n    }\n\n    var postdata = {\n      learnerID: auth.learnerID,\n      address: addressArray.length ? addressArray.join(', ') : null,\n      address1: DTO.address1 ? DTO.address1 : null,\n      learnerLevel: DTO.learnerLevel,\n      language: language.map(function (_ref4) {\n        var lanName = _ref4.lanName;\n        return lanName;\n      }).join(', '),\n      jobNow: DTO.jobNow,\n      technologySkill: techSkill.map(function (_ref5) {\n        var techName = _ref5.techName;\n        return techName;\n      }).join(', '),\n      fieldOfStudy: DTO.fieldOfStudy,\n      feeMax: DTO.feeMax,\n      freeTime: DTO.freeTime && DTO.freeTime.join('|') || '',\n      futureSelfDevelopment: DTO.futureSelfDevelopment\n    };\n    dispatch(updateAction(postdata)).then(function () {\n      toastSuccessText(\"Update success!\");\n    });\n  }\n\n  var checkSecondStep = function checkSecondStep() {\n    var errors = [];\n\n    if (!(language && language.length > 0)) {\n      errors.push(\"Please choose at least one language you know\");\n    }\n\n    if (!(techSkill && techSkill.length > 0)) {\n      errors.push(\"Please choose at least one technology skill you know\");\n    }\n\n    var count = 0;\n\n    if (DTO.address1) {\n      count++;\n    }\n\n    if (DTO.ward || DTO.wards.length == 0 && DTO.districts.length > 0) {\n      count++;\n    }\n\n    if (DTO.district) {\n      count++;\n    }\n\n    if (DTO.city) {\n      count++;\n    }\n\n    if (count > 0 && count < 4) {\n      // errors.push(\"bạn phải nhập đầy đủ địa chỉ\");\n      errors.push(\"You must type in the complete address (including house number, ward, district, city)\");\n    }\n\n    errors.forEach(function (err) {\n      toastErrorText(err);\n    });\n    return errors.length == 0;\n  };\n\n  var addFreeTime = function addFreeTime() {\n    var fullFreeTime = timeStart + '-' + timeEnd + ' (' + weekday.map(function (el) {\n      return el.key;\n    }).join('-') + ')';\n    setDTO(_objectSpread({}, DTO, {\n      freeTime: [].concat(_toConsumableArray(DTO.freeTime), [fullFreeTime])\n    }));\n    setTimeStart('00:00');\n    setTimeEnd('23:59');\n    setWeekday([]);\n  };\n\n  var onRemoveTime = function onRemoveTime(index) {\n    setDTO(_objectSpread({}, DTO, {\n      freeTime: DTO.freeTime.filter(function (el, i) {\n        return i != index;\n      })\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThemeOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-main__inner card-body main-card card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-wizard-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleEmail\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 21\n    }\n  }, \"What do you do?\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: DTO.jobNow,\n    onChange: function onChange(e) {\n      return setDTO(_objectSpread({}, DTO, {\n        jobNow: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  }, \"Not employed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"work\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }, \"Employed full-time\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"study\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 29\n    }\n  }, \"Student full-time\")))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, \"What is your major?\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: DTO.fieldOfStudy,\n    onChange: function onChange(e) {\n      return setDTO(_objectSpread({}, DTO, {\n        fieldOfStudy: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, \"Please select a major\"), lsMajor.length && lsMajor.map(function (_ref6, index) {\n    var subjectName = _ref6.subjectName,\n        subjectID = _ref6.subjectID;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: subjectID,\n      value: subjectID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 98\n      }\n    }, subjectName);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"examplePassword\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 21\n    }\n  }, \"Which of the following best describes the highest level of formal education that you've completed?\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: DTO.learnerLevel,\n    onChange: function onChange(e) {\n      return setDTO(_objectSpread({}, DTO, {\n        learnerLevel: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 29\n    }\n  }, \"Please select a degree\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Secondary school\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }, \"Secondary school\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Some college/university study without earning a degree Associate degree (A.A., A.S., etc.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, \"Some college/university study without earning a degree Associate degree (A.A., A.S., etc.)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Bachelor’s degree (B.A., B.S., B.Eng., etc.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, \"Bachelor\\u2019s degree (B.A., B.S., B.Eng., etc.)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Master’s degree (M.A., M.S., M.Eng., MBA, etc.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, \"Master\\u2019s degree (M.A., M.S., M.Eng., MBA, etc.)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Professional degree (JD, MD, etc.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }, \"Professional degree (JD, MD, etc.))\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Other doctoral degree (Ph.D., Ed.D., etc.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 29\n    }\n  }, \"Other doctoral degree (Ph.D., Ed.D., etc.)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Something else\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 29\n    }\n  }, \"Something else\")))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleSelect\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, \"Where do you live?\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: DTO.address1,\n    onChange: function onChange(e) {\n      return setDTO(_objectSpread({}, DTO, {\n        address1: e.target.value\n      }));\n    },\n    placeholder: \"Example: 62 Tr\\u01B0\\u01A1ng Ph\\u01B0\\u1EDBc Phan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: DTO.ward_id,\n    onChange: function onChange(e) {\n      if (e.target.value === \"-1\") {\n        setDTO(_objectSpread({}, DTO, {\n          ward_id: e.target.value,\n          ward: \"\"\n        }));\n      } else {\n        setDTO(_objectSpread({}, DTO, {\n          ward_id: e.target.value,\n          ward: DTO.wards[e.target.value].ward_name\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 29\n    }\n  }, \"Please select Ward\"), DTO.wards.length && DTO.wards.map(function (_ref7, index) {\n    var ward_id = _ref7.ward_id,\n        ward_name = _ref7.ward_name;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: ward_id,\n      value: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 98\n      }\n    }, ward_name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: DTO.district_id,\n    onChange: function onChange(e) {\n      if (e.target.value === \"-1\") {\n        getWards(0, _objectSpread({}, DTO, {\n          district_id: e.target.value,\n          district: \"\",\n          ward_id: -1,\n          ward: \"\"\n        }));\n      } else {\n        getWards(DTO.districts[e.target.value].district_id, _objectSpread({}, DTO, {\n          district_id: e.target.value,\n          district: DTO.districts[e.target.value].district_name,\n          ward_id: -1,\n          ward: \"\"\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 29\n    }\n  }, \"Please select a district\"), DTO.districts.length && DTO.districts.map(function (_ref8, index) {\n    var district_id = _ref8.district_id,\n        district_name = _ref8.district_name;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: district_id,\n      value: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 114\n      }\n    }, district_name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: DTO.city_id,\n    onChange: function onChange(e) {\n      if (e.target.value === \"-1\") {\n        getDistricts(0, _objectSpread({}, DTO, {\n          city_id: e.target.value,\n          city: \"\",\n          district_id: -1,\n          district: \"\",\n          ward_id: -1,\n          ward: \"\"\n        }));\n      } else {\n        getDistricts(DTO.cities[e.target.value].province_id, _objectSpread({}, DTO, {\n          city_id: e.target.value,\n          city: DTO.cities[e.target.value].province_name,\n          district_id: -1,\n          district: \"\",\n          ward_id: -1,\n          ward: \"\"\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: -1,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 29\n    }\n  }, \"Please select a city\"), DTO.cities.length && DTO.cities.map(function (_ref9, index) {\n    var province_name = _ref9.province_name,\n        province_id = _ref9.province_id;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: province_id,\n      value: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 108\n      }\n    }, province_name);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleSelectMulti\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 21\n    }\n  }, \"Which languages can you know?\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    components: makeAnimated(),\n    closeMenuOnSelect: false,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.lanName;\n    },\n    getOptionValue: function getOptionValue(option) {\n      return option.lanName;\n    },\n    options: lsLanguage,\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    value: language,\n    onChange: function onChange(value) {\n      setlanguage(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleSelectMulti\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, \"What skills do you know?\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    components: makeAnimated(),\n    closeMenuOnSelect: false,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.techName;\n    },\n    getOptionValue: function getOptionValue(option) {\n      return option.techName;\n    },\n    options: lsTechnology,\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    value: techSkill,\n    onChange: function onChange(value) {\n      settechSkill(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"examplePassword\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }, \"What is your budget for courses?\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: DTO.feeMax,\n    onChange: function onChange(e) {\n      return setDTO(_objectSpread({}, DTO, {\n        feeMax: e.target.value,\n        feeMaxText: lstFeeMax[e.target.value]\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 29\n    }\n  }, \"Please select a fee\"), lstFeeMax.map(function (value, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: value,\n      value: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 63\n      }\n    }, value);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleSelectMulti\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 21\n    }\n  }, \"If we are offering offline classes, what time would be best for you?\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 21\n    }\n  }, \"Start time\", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"time placeholder\",\n    type: \"time\",\n    value: timeStart,\n    onChange: function onChange(e) {\n      setTimeStart(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 21\n    }\n  }, \"End time\", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"time placeholder\",\n    type: \"time\",\n    value: timeEnd,\n    onChange: function onChange(e) {\n      setTimeEnd(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 21\n    }\n  }, \"Weekday\", /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    components: makeAnimated(),\n    closeMenuOnSelect: false,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.text;\n    },\n    getOptionValue: function getOptionValue(option) {\n      return option.key;\n    },\n    options: weekdays,\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    value: weekday,\n    onChange: function onChange(value) {\n      setWeekday(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 25\n    }\n  }, \"\\xA0\\xA0\\xA0\\xA0\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    className: \"btn-shadow float-left btn-wide btn-pill\",\n    outline: true,\n    onClick: addFreeTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 25\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 25\n    }\n  }, DTO.freeTime.map(function (el, index) {\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: index,\n      style: {\n        borderTop: \"1px solid rgba(0, 0, 0, 0.125)\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 33\n      }\n    }, el, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"aria-label\": \"Close\",\n      onClick: function onClick() {\n        return onRemoveTime(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 41\n      }\n    }, \"\\xD7\")));\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"examplePassword\",\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 21\n    }\n  }, \"Which of the following best reflects how you plan to grow as a person?\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: DTO.futureSelfDevelopment,\n    onChange: function onChange(e) {\n      return setDTO(_objectSpread({}, DTO, {\n        futureSelfDevelopment: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, \"Select your future self-development\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Data or business analyst\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 29\n    }\n  }, \"Data or business analyst\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Data scientist or machine learning specialist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 29\n    }\n  }, \"Data scientist or machine learning specialist\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Database administrator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 29\n    }\n  }, \"Database administrator\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Designer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 29\n    }\n  }, \"Designer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Developer, back-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 29\n    }\n  }, \"Developer, back-end\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Developer, desktop or enterprise applications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 29\n    }\n  }, \"Developer, desktop or enterprise applications\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Developer, embedded applications or devices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 29\n    }\n  }, \"Developer, embedded applications or devices\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Developer, front-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 29\n    }\n  }, \"Developer, front-end\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Developer, full-stack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 29\n    }\n  }, \"Developer, full-stack\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Developer, game or graphics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 29\n    }\n  }, \"Developer, game or graphics\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Developer, mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 29\n    }\n  }, \"Developer, mobile\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Developer, QA or test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 29\n    }\n  }, \"Developer, QA or test\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"DevOps specialist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 29\n    }\n  }, \"DevOps specialist\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Engineer, data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 29\n    }\n  }, \"Engineer, data\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Engineer, site reliability\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 29\n    }\n  }, \"Engineer, site reliability\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Engineering manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 29\n    }\n  }, \"Engineering manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Marketing or sales professional\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 29\n    }\n  }, \"Marketing or sales professional\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Product manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 29\n    }\n  }, \"Product manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Scientist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 29\n    }\n  }, \"Scientist\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Senior Executive (C-Suite, VP, etc.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 29\n    }\n  }, \"Senior Executive (C-Suite, VP, etc.)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"System administrator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 29\n    }\n  }, \"System administrator\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    size: \"lg\",\n    className: \"btn-shadow btn-wide\",\n    onClick: function onClick() {\n      return onClickUpdate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 17\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/src/Pages/Accounts/EditProfile.js"],"names":["React","Fragment","useCallback","useEffect","useRef","useState","useLayoutEffect","useDispatch","useSelector","ThemeOptions","AppHeader","FormGroup","Label","CustomInput","Input","Col","Form","FormText","Button","Alert","ListGroup","ListGroupItem","CloseButton","avatar1","course1","image1","image2","image3","useHistory","useParams","http","Select","makeAnimated","axios","GetAllLanguageAction","GetAllTechnologyAction","GetFreeTimeAction","GetAllMajorAction","updateAction","toastErrorText","toastSuccessText","EditProfile","dispatch","history","auth","state","accountReducer","user","city_id","city","district_id","district","ward_id","ward","learnerLevel","language","jobNow","technologySkill","feeMax","feeMaxText","freeTime","futureSelfDevelopment","fieldOfStudy","address1","cities","districts","wards","DTO","setDTO","masterdataReducer","lsLanguage","lsFreeTime","lsTechnology","lsMajor","techSkill","settechSkill","setlanguage","lstFeeMax","setLstFeeMax","setCities","setDistricts","setWards","loading","setLoading","weekdays","key","text","timeStart","setTimeStart","timeEnd","setTimeEnd","weekday","setWeekday","updateCities","get","data","pre","results","prev","techName","freeTimes","split","map","el","lanName","address","cityIndex","findIndex","province_name","indexOf","getDistricts","province_id","district_text","ward_text","id","params","districtIndex","district_name","getWards","wardIndex","ward_name","onClickUpdate","checkSecondStep","addressArray","push","postdata","learnerID","length","join","then","errors","count","forEach","err","addFreeTime","fullFreeTime","onRemoveTime","index","filter","i","e","target","value","subjectName","subjectID","option","borderTop"],"mappings":"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","sourcesContent":["import React, { Fragment, useCallback, useEffect, useRef, useState, useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ThemeOptions from \"../../Layout/ThemeOptions\";\nimport AppHeader from \"../../Layout/AppHeader\";\nimport { FormGroup, Label, CustomInput, Input, Col, Form, FormText, Button, Alert, ListGroup,ListGroupItem, CloseButton} from \"reactstrap\";\n\nimport avatar1 from \"../../assets/utils/images/avatars/2.jpg\";\nimport course1 from \"../../assets/utils/images/courses/course-1.jpg\";\nimport image1 from \"../../assets/images/slider-img1.jpg\";\nimport image2 from \"../../assets/images/slider-img2.jpg\";\nimport image3 from \"../../assets/images/slider-img3.jpg\";\nimport { useHistory, useParams } from \"react-router\";\nimport http from \"../../redux/utils/http\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport axios from \"axios\";\nimport {\n  GetAllLanguageAction,\n  GetAllTechnologyAction,\n  GetFreeTimeAction,\n  GetAllMajorAction,\n} from \"../../redux/masterdata/masterDataAction\";\nimport { updateAction } from \"../../redux/actions/account/accountAction\";\nimport { toastErrorText, toastSuccessText } from \"../../helpers/toastify\";\n\nexport default function EditProfile() {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const auth = useSelector((state) => state.accountReducer.user);\n  const [DTO, setDTO] = useState({\n    city_id: \"\",\n    city: \"\",\n    district_id: \"\",\n    district: \"\",\n    ward_id: \"\",\n    ward: \"\",\n    learnerLevel: \"\",\n    language: \"\",\n    jobNow: \"s\",\n    technologySkill: \"\",\n    feeMax: \"\",\n    feeMaxText: \"\",\n    freeTime: [],\n    futureSelfDevelopment: \"\",\n    fieldOfStudy: \"\",\n    address1: \"\",\n    cities: [],\n    districts: [],\n    wards: [],\n  });\n\n  const { lsLanguage, lsFreeTime, lsTechnology, lsMajor } = useSelector((state) => state.masterdataReducer);\n\n  const [techSkill, settechSkill] = useState([])\n  const [language, setlanguage] = useState([])\n  // const [freeTime, setFreeTime] = useState([])\n  const [lstFeeMax, setLstFeeMax] = useState([\n          'Less 5 millions VND',\n          'From 5 to 15 millions VND',\n          'From 15 to 30 millions VND',\n          'From 30 to 50 millions VND',\n      ]);\n  const [cities, setCities] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [wards, setWards] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  const weekdays  = [{\n        key: '2',\n        text: 'Monday'\n    },{\n        key: '3',\n        text: 'Tuesday'\n    },{\n        key: '4',\n        text: 'Wednesday'\n    },{\n        key: '5',\n        text: 'Thursday'\n    },{\n        key: '6',\n        text: 'Friday'\n    },{\n        key: '7',\n        text: 'Saturday'\n    },{\n        key: 'CN',\n        text: 'Sunday'\n    },\n  ];\n  const [timeStart, setTimeStart] = useState(\"00:00\")\n  const [timeEnd, setTimeEnd] = useState(\"23:59\")\n  const [weekday, setWeekday] = useState([]);\n    \n  useLayoutEffect(() => {\n      const updateCities = async () => {\n          const {data} = await axios.get(\"https://vapi.vnappmob.com/api/province/\");\n          // setCities(data.results);\n          setDTO(pre => ({ ...pre, cities: data.results }));\n      }\n      updateCities();\n\n  }, []);\n\n  useEffect(() => {\n      setDTO((prev) => {\n        return {...prev, technologySkill: [{techName: \"API\"}, {techName:\"AI\"}],\n          feeMax: auth.feeMax,\n          learnerLevel: auth.learnerLevel,\n          futureSelfDevelopment: auth.futureSelfDevelopment,\n          jobNow: auth.jobNow,\n          address1: auth.address1 || '',\n          fieldOfStudy: auth.fieldOfStudy\n        }\n      });\n    if(auth.freeTime) {\n      let freeTimes = auth.freeTime.split('|');\n      setDTO((prev) => {\n        return {...prev, freeTime: freeTimes}\n      });\n    }\n    if (auth.language) {\n      setlanguage(auth.language.split(', ').map((el) => ({lanName: el})));\n    }\n    if (auth.technologySkill) {\n      settechSkill(auth.technologySkill.split(', ').map((el) => ({techName: el})));\n    }\n    \n  }, [auth]);\n  useEffect(() => {\n    if (auth.address && DTO.cities) {\n      let address = auth.address.split(', ');\n      if (address[2]) {\n        let cityIndex = DTO.cities.findIndex(el => el.province_name.indexOf(address[2]) !== -1);\n        \n        if (cityIndex !== -1) {\n          getDistricts(DTO.cities[cityIndex].province_id, {city_id: cityIndex, city: DTO.cities[cityIndex].province_name, district_text: address[1], ward_text: address[0]});\n        }\n      }\n    }\n  }, [DTO.cities]);\n\n  useEffect(() => {\n    dispatch(GetAllLanguageAction());\n    dispatch(GetAllTechnologyAction());\n    dispatch(GetFreeTimeAction());\n    dispatch(GetAllMajorAction());\n  }, []);\n\n  const getDistricts = async (id, params) => {\n      const {data} = await axios.get(`https://vapi.vnappmob.com/api/province/district/${id}`);\n      if (params.district_text && data.results) {\n        let districtIndex = data.results.findIndex(el => el.district_name.indexOf(params.district_text) !== -1);\n        if (districtIndex !== -1) {\n          getWards(data.results[districtIndex].district_id, { ...params, \n            district_id: districtIndex,\n            district: data.results[districtIndex].district_name,\n            districts: data.results});\n          return;\n        } else {\n          setDTO(pre => ({ ...pre, ...params, districts: data.results}));\n          return;\n        }\n      }\n      setDTO(pre => ({ ...pre, ...params, districts: data.results}));\n  };\n\n  const getWards = async (id, params) => {\n      const {data} = await axios.get(`https://vapi.vnappmob.com/api/province/ward/${id}`);\n      if (params.ward_text && data.results) {\n        let wardIndex = data.results.findIndex(el => el.ward_name.indexOf(params.ward_text) !== -1);\n        if (wardIndex !== -1) {\n          setDTO(pre => ({ ...pre, ...params, wards: data.results, ward: data.results[wardIndex].ward_name, ward_id: wardIndex}));\n          return;\n        } else {\n          setDTO(pre => ({ ...pre, ...params, wards: data.results}));\n          return;\n        }\n      }\n\n      setDTO(pre => ({ ...pre, ...params, wards: data.results }));\n  }\n\n  function onClickUpdate() {\n    if(checkSecondStep() == false) {\n      return;\n    }\n    let addressArray = [];\n    if (DTO.ward) {\n        addressArray.push(DTO.ward)\n    }\n    if (DTO.district) {\n        addressArray.push(DTO.district)\n    }\n    if (DTO.city) {\n        addressArray.push(DTO.city)\n    }\n    let postdata = {\n      learnerID: auth.learnerID,\n      address: addressArray.length ? addressArray.join(', ') : null,\n      address1: DTO.address1 ? DTO.address1 : null,\n      learnerLevel: DTO.learnerLevel,\n      language: language.map(({lanName}) => lanName).join(', '),\n      jobNow: DTO.jobNow,\n      technologySkill: techSkill.map(({techName}) => techName).join(', '),\n      fieldOfStudy: DTO.fieldOfStudy,\n      feeMax: DTO.feeMax,\n      freeTime: DTO.freeTime && DTO.freeTime.join('|') || '',\n      futureSelfDevelopment: DTO.futureSelfDevelopment,\n    }\n    dispatch(updateAction(postdata)).then(() => {\n      toastSuccessText(\"Update success!\");\n    });\n  }\n\n  const checkSecondStep = () => {\n    const errors = [];\n    if(!(language && language.length > 0)) {\n      errors.push(\"Please choose at least one language you know\");\n    }\n    if (!(techSkill && techSkill.length > 0)) {\n      errors.push(\"Please choose at least one technology skill you know\");\n    }\n\n    let count = 0;\n    if (DTO.address1) {\n        count++;\n    }\n    if (DTO.ward || (DTO.wards.length == 0 && DTO.districts.length > 0)) {\n        count++;\n    }\n    if (DTO.district) {\n        count++;\n    }\n    if (DTO.city) {\n        count++;\n    }\n    if (count > 0 && count < 4) {\n      // errors.push(\"bạn phải nhập đầy đủ địa chỉ\");\n      errors.push(\"You must type in the complete address (including house number, ward, district, city)\")\n      \n    }\n\n    errors.forEach((err) => {\n      toastErrorText(err);\n    });\n\n    return errors.length == 0;\n  }\n  const addFreeTime = () => {\n    let fullFreeTime = timeStart + '-' + timeEnd + ' (' + weekday.map((el) => el.key).join('-') + ')';\n    setDTO({...DTO, freeTime: [...DTO.freeTime, fullFreeTime]});\n    setTimeStart('00:00');\n    setTimeEnd('23:59');\n    setWeekday([]);\n  }\n  const onRemoveTime = (index) => {\n    setDTO({...DTO, freeTime: DTO.freeTime.filter((el, i) => i != index)});\n  }\n\n  return (\n    <>\n      <ThemeOptions />\n      <AppHeader />\n      <br/><br/><br/><br/>\n      <div className=\"app-main__inner card-body main-card card\">\n        <div className=\"form-wizard-content\">\n            <Form>\n                <FormGroup row>\n                    <Label for=\"exampleEmail\" sm={4}>\n                        What do you do?\n                    </Label>\n                    <Col sm={7}>\n                        <Input type=\"select\" value={DTO.jobNow} onChange={(e) => setDTO({ ...DTO, jobNow: e.target.value })}>\n                            <option value={\"\"}>Not employed</option>\n                            <option value={\"work\"}>Employed full-time</option>\n                            <option value={\"study\"}>Student full-time</option>\n                        </Input>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label sm={4}>\n                        What is your major?\n                    </Label>\n                    <Col sm={7}>\n                        <Input type=\"select\" value={DTO.fieldOfStudy} onChange={(e) => setDTO({ ...DTO, fieldOfStudy: e.target.value })}>\n                            <option value={\"\"}>Please select a major</option>\n                            {lsMajor.length && lsMajor.map(({subjectName, subjectID}, index) => (<option key={subjectID} value={subjectID}>{subjectName}</option>))}\n                        </Input>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"examplePassword\" sm={4}>\n                        Which of the following best describes the highest level of formal education that you've completed?\n                    </Label>\n                    <Col sm={7}>\n                        <Input type=\"select\" value={DTO.learnerLevel} onChange={(e) => setDTO({ ...DTO, learnerLevel: e.target.value })}>\n                            <option value={\"\"}>Please select a degree</option>\n                            <option value={\"Secondary school\"}>Secondary school</option>\n                            <option value={\"Some college/university study without earning a degree Associate degree (A.A., A.S., etc.)\"}>Some college/university study without earning a degree Associate degree (A.A., A.S., etc.)</option>\n                            <option value={\"Bachelor’s degree (B.A., B.S., B.Eng., etc.)\"}>Bachelor’s degree (B.A., B.S., B.Eng., etc.)</option>\n                            <option value={\"Master’s degree (M.A., M.S., M.Eng., MBA, etc.)\"}>Master’s degree (M.A., M.S., M.Eng., MBA, etc.)</option>\n                            <option value={\"Professional degree (JD, MD, etc.)\"}>Professional degree (JD, MD, etc.))</option>\n                            <option value={\"Other doctoral degree (Ph.D., Ed.D., etc.)\"}>Other doctoral degree (Ph.D., Ed.D., etc.)</option>\n                            <option value={\"Something else\"}>Something else</option>\n                        </Input>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"exampleSelect\" sm={4}>\n                        Where do you live?\n                    </Label>\n                    <Col sm={7}>\n                        <Input type=\"text\" value={DTO.address1} onChange={(e) => setDTO({...DTO, address1: e.target.value})} placeholder=\"Example: 62 Trương Phước Phan\" />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label sm={4}>\n                            {/* Select Ward, District, City */}\n                  </Label>\n                    <Col sm={2}>\n                        <Input type=\"select\" value={DTO.ward_id} onChange={(e) => {\n                            if (e.target.value === \"-1\") { \n                                setDTO({ ...DTO, ward_id: e.target.value, ward: \"\" })\n                            } else {\n                                setDTO({ ...DTO, ward_id: e.target.value, ward: DTO.wards[e.target.value].ward_name })\n                            }\n                        }}>\n                            <option value={-1}>Please select Ward</option>\n                            {DTO.wards.length && DTO.wards.map(({ward_id, ward_name}, index) => (<option key={ward_id} value={index}>{ward_name}</option>))}\n                        </Input>\n                    </Col>\n                    <Col sm={2}>\n                        <Input type=\"select\" value={DTO.district_id} onChange={(e) => {\n                            if (e.target.value === \"-1\") { \n                                getWards(0, { ...DTO, district_id: e.target.value, district: \"\", ward_id: -1, ward: \"\" });\n                            } else {\n                                getWards(DTO.districts[e.target.value].district_id, { ...DTO, district_id: e.target.value, district: DTO.districts[e.target.value].district_name, ward_id: -1, ward: \"\" });\n                            }\n                        }}>\n                            <option value={-1}>Please select a district</option>\n                            {DTO.districts.length && DTO.districts.map(({district_id, district_name}, index) => (<option key={district_id} value={index}>{district_name}</option>))}\n                            \n                        </Input>\n                    </Col>\n                    <Col sm={2}>\n                        <Input type=\"select\" value={DTO.city_id} onChange={(e) => {\n                            if (e.target.value === \"-1\") { \n                                getDistricts(0, { ...DTO, city_id: e.target.value, city: \"\", district_id: -1, district: \"\", ward_id: -1, ward: \"\" });\n                            } else {\n                                getDistricts(DTO.cities[e.target.value].province_id, { ...DTO, city_id: e.target.value, city: DTO.cities[e.target.value].province_name, district_id: -1, district: \"\", ward_id: -1, ward: \"\" });\n                                \n                            }\n                        }}>\n                            <option value={-1} key={0}>Please select a city</option>\n                            {DTO.cities.length && DTO.cities.map(({province_name, province_id}, index) => (<option key={province_id} value={index}>{province_name}</option>))}\n                        </Input>\n                    </Col>\n                    \n                </FormGroup>\n\n                <FormGroup row>\n                    <Label for=\"exampleSelectMulti\" sm={4}>\n                        Which languages can you know?\n                    </Label>\n                    <Col sm={7}>\n                        <Select isMulti components={makeAnimated()}\n                            closeMenuOnSelect={false}\n                            getOptionLabel={option => option.lanName}\n                            getOptionValue={option => option.lanName}\n                            options={lsLanguage} className=\"basic-multi-select\" classNamePrefix=\"select\"\n                            value={language}\n                            onChange={(value) => {\n                                setlanguage(value);\n                            }}\n                        />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"exampleSelectMulti\" sm={4}>\n                        What skills do you know?\n                    </Label>\n                    <Col sm={7}>\n                        <Select isMulti components={makeAnimated()}\n                            closeMenuOnSelect={false}\n                            getOptionLabel={option => option.techName}\n                            getOptionValue={option => option.techName}\n                            options={lsTechnology} className=\"basic-multi-select\" classNamePrefix=\"select\"\n                            value={techSkill}\n                            onChange={(value) => {\n                                settechSkill(value);\n                            }} />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"examplePassword\" sm={4}>\n                      What is your budget for courses?\n                    </Label>\n                    <Col sm={7}>\n                        <Input type=\"select\" value={DTO.feeMax} onChange={(e) => setDTO({ ...DTO, \n                                feeMax: e.target.value, feeMaxText: lstFeeMax[e.target.value] })}>\n                            <option value={\"\"}>Please select a fee</option>\n                            {lstFeeMax.map((value, index) => (<option key={value} value={index}>{value}</option>))}\n                        </Input>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"exampleSelectMulti\" sm={4}>\n                      If we are offering offline classes, what time would be best for you?\n                    </Label>\n                    <Col sm={2}>\n                        Start time\n                        <Input\n                          placeholder=\"time placeholder\"\n                          type=\"time\"\n                          value={timeStart}\n                          onChange={(e) => { setTimeStart(e.target.value)}}\n                        />\n                    </Col>\n                    <Col sm={2}>\n                        End time\n                        <Input\n                          placeholder=\"time placeholder\"\n                          type=\"time\"\n                          value={timeEnd}\n                          onChange={(e) => { setTimeEnd(e.target.value)}}\n                        />\n                    </Col>\n                    <Col sm={3}>\n                        Weekday\n                        <Select isMulti components={makeAnimated()}\n                            closeMenuOnSelect={false}\n                            getOptionLabel={option => option.text}\n                            getOptionValue={option => option.key}\n                            options={weekdays} className=\"basic-multi-select\" classNamePrefix=\"select\"\n                            value={weekday}\n                            onChange={(value) => {\n                                setWeekday(value)\n                            }}\n                        />\n                    </Col>\n                    <Col sm={4}>\n                    </Col>\n                    <Col sm={8}>\n                        <div>&nbsp;&nbsp;&nbsp;&nbsp;</div>\n                        <Button color=\"secondary\" className=\"btn-shadow float-left btn-wide btn-pill\" outline\n                          onClick={addFreeTime}>\n                          Add\n                        </Button>\n                    </Col>\n                    <Col sm={4}>\n                    </Col>\n                    <Col sm={7}>\n                        <ListGroup>\n                            {DTO.freeTime.map((el, index) => (\n                                <ListGroupItem key={index} style={{borderTop: \"1px solid rgba(0, 0, 0, 0.125)\"}}>\n                                    {el}\n                                    <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => onRemoveTime(index)}>\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </ListGroupItem>)\n                            )}\n                          \n                        </ListGroup>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"examplePassword\" sm={4}>\n                      Which of the following best reflects how you plan to grow as a person?\n                    </Label>\n                    <Col sm={7}>\n                        <Input type=\"select\" value={DTO.futureSelfDevelopment} onChange={(e) => setDTO({ ...DTO, futureSelfDevelopment: e.target.value })}>\n                            <option value={\"\"}>Select your future self-development</option>\n                            <option value={\"Data or business analyst\"}>Data or business analyst</option>\n                            <option value={\"Data scientist or machine learning specialist\"}>Data scientist or machine learning specialist</option>\n                            <option value={\"Database administrator\"}>Database administrator</option>\n                            <option value={\"Designer\"}>Designer</option>\n                            <option value={\"Developer, back-end\"}>Developer, back-end</option>\n                            <option value={\"Developer, desktop or enterprise applications\"}>Developer, desktop or enterprise applications</option>\n                            <option value={\"Developer, embedded applications or devices\"}>Developer, embedded applications or devices</option>\n                            <option value={\"Developer, front-end\"}>Developer, front-end</option>\n                            <option value={\"Developer, full-stack\"}>Developer, full-stack</option>\n                            <option value={\"Developer, game or graphics\"}>Developer, game or graphics</option>\n                            <option value={\"Developer, mobile\"}>Developer, mobile</option>\n                            <option value={\"Developer, QA or test\"}>Developer, QA or test</option>\n                            <option value={\"DevOps specialist\"}>DevOps specialist</option>\n                            <option value={\"Engineer, data\"}>Engineer, data</option>\n                            <option value={\"Engineer, site reliability\"}>Engineer, site reliability</option>\n                            <option value={\"Engineering manager\"}>Engineering manager</option>\n                            <option value={\"Marketing or sales professional\"}>Marketing or sales professional</option>\n                            <option value={\"Product manager\"}>Product manager</option>\n                            <option value={\"Scientist\"}>Scientist</option>\n                            <option value={\"Senior Executive (C-Suite, VP, etc.)\"}>Senior Executive (C-Suite, VP, etc.)</option>\n                            <option value={\"System administrator\"}>System administrator</option>\n                        </Input>\n                    </Col>\n                </FormGroup>\n            </Form>\n\n            <div className=\"text-center\">\n                <Button color=\"success\" size=\"lg\" className=\"btn-shadow btn-wide\" onClick={() => onClickUpdate()}>\n                    Update\n                </Button>\n            </div>\n            <br />\n        </div>\n      </div>\n      {/* </div> */}\n      {/* </div> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}