{"ast":null,"code":"import { toast } from 'react-toastify';\nexport var toastSuccess = function toastSuccess() {\n  toast.success(\"Thành công\");\n};\nexport var toastDeleteSuccess = function toastDeleteSuccess() {\n  toast.success(\"Đã xóa\");\n};\nexport var toastError = function toastError(error) {\n  var message = null;\n\n  if (typeof error === 'object' && error.message) {\n    message = error.message;\n  }\n\n  if (message !== null && message !== undefined) {\n    toast.error(message);\n  }\n};\nexport var toastSuccessText = function toastSuccessText(txt) {\n  toast.success(txt);\n};\nexport var toastErrorText = function toastErrorText(txt) {\n  toast.error(txt);\n};","map":{"version":3,"sources":["/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/src/helpers/toastify.js"],"names":["toast","toastSuccess","success","toastDeleteSuccess","toastError","error","message","undefined","toastSuccessText","txt","toastErrorText"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9BD,EAAAA,KAAK,CAACE,OAAN,CAAc,YAAd;AACH,CAFM;AAGP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACpCH,EAAAA,KAAK,CAACE,OAAN,CAAc,QAAd;AACH,CAFM;AAGP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AACjC,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,OAAvC,EAAgD;AACzCA,IAAAA,OADyC,GAC7BD,KAD6B,CACzCC,OADyC;AAE/C;;AACD,MAAIA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKC,SAApC,EAA+C;AAC3CP,IAAAA,KAAK,CAACK,KAAN,CAAYC,OAAZ;AACH;AACJ,CATM;AAYP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAS;AACrCT,EAAAA,KAAK,CAACE,OAAN,CAAcO,GAAd;AACH,CAFM;AAGP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACD,GAAD,EAAS;AACnCT,EAAAA,KAAK,CAACK,KAAN,CAAYI,GAAZ;AACH,CAFM","sourcesContent":["import { toast } from 'react-toastify';\n\nexport const toastSuccess = () => {\n    toast.success(\"Thành công\");\n}\nexport const toastDeleteSuccess = () => {\n    toast.success(\"Đã xóa\");\n}\nexport const toastError = (error) => {\n    let message = null;\n\n    if (typeof error === 'object' && error.message) {\n        ({ message } = error);\n    }\n    if (message !== null && message !== undefined) {\n        toast.error(message);\n    }\n}\n\n\nexport const toastSuccessText = (txt) => {\n    toast.success(txt);\n}\nexport const toastErrorText = (txt) => {\n    toast.error(txt);\n}"]},"metadata":{},"sourceType":"module"}