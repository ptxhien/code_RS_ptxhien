{"ast":null,"code":"var _jsxFileName = \"/Users/phamthixuanhien/Desktop/master_RS/Frontend/src/Components/RecommendationHandler/index.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { Form, Button, Col, Row, FormGroup, Label, Input, Card, CardBody } from \"reactstrap\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport ModalFaded from \"../../Pages/Components/Modal/Examples/ModalFaded\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { toastErrorText } from \"../../helpers/toastify\";\nimport { recommendCourses } from \"../../redux/actions/courses/courses\";\n\nfunction RecommendationHandler() {\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      masterdataReducer = _useSelector.masterdataReducer,\n      accountReducer = _useSelector.accountReducer,\n      coursesReducer = _useSelector.coursesReducer;\n\n  var lsJob = masterdataReducer.lsJob;\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var recommendationInfo = useRef({\n    occupation: \"\",\n    form: \"\",\n    month: \"00\",\n    typeFilter: \"progress\"\n  });\n  useEffect(function () {\n    var onStorageEvent = function onStorageEvent(_ref) {\n      var key = _ref.key,\n          oldValue = _ref.oldValue,\n          newValue = _ref.newValue;\n\n      if (key === 'time_enroll') {\n        if (coursesReducer.isRecommended) {\n          submit();\n        }\n      }\n    };\n\n    window.addEventListener('storage', onStorageEvent);\n    return function () {\n      window.removeEventListener('storage', onStorageEvent);\n    };\n  }, [coursesReducer]);\n\n  var submit = function submit() {\n    var errs = [];\n    var _recommendationInfo$c = recommendationInfo.current,\n        occupation = _recommendationInfo$c.occupation,\n        form = _recommendationInfo$c.form,\n        month = _recommendationInfo$c.month,\n        typeFilter = _recommendationInfo$c.typeFilter;\n    var email = accountReducer.user.email; // validation\n\n    if (!occupation) {\n      errs.push(\"Occupation is required\");\n    }\n\n    if (!email) {\n      history.push(\"/login\");\n      return;\n    } // fire errs message \n\n\n    if (errs.length) {\n      errs.forEach(function (err) {\n        toastErrorText(err);\n      });\n    } else {\n      // call api to RS server\n      localStorage.setItem(\"Form\", form);\n      dispatch(recommendCourses(occupation, form, month, email, typeFilter));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Position Job\"), /*#__PURE__*/React.createElement(Select, {\n    components: makeAnimated(),\n    closeMenuOnSelect: false,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.jobTitle;\n    },\n    getOptionValue: function getOptionValue(option) {\n      return option.jobID;\n    },\n    options: lsJob,\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    onChange: function onChange(e) {\n      recommendationInfo.current.occupation = e.jobID;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Study Method\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    onChange: function onChange(e) {\n      recommendationInfo.current.form = e.target.value;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Choose study method\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"online\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Online\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"offline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Offline\")))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Maximum study period\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    onChange: function onChange(e) {\n      recommendationInfo.current.month = e.target.value;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Choose month\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"1 Month\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"2 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"3 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"4 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"5 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"06\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"6 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"07\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"7 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"08\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"8 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"09\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"9 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"10 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"11 Months\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"12 Months\")))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Kind of recommendation systems\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    onChange: function onChange(e) {\n      recommendationInfo.current.typeFilter = e.target.value;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Top 10 courses\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Learning Path\")))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalFaded, {\n    submit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"Evaluation Recommendation Systems\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"success\",\n    onClick: function onClick(e) {\n      window.open('https://docs.google.com/forms/d/e/1FAIpQLSc_YfWh5VU5TRhu7bC0tluDmMB6xdB-YeXr5dlrGHT3KMqZYg/viewform', '_blank' // <- This is what makes it open in a new window.\n      );\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Take the survey\"))))));\n}\n\nexport default RecommendationHandler;","map":{"version":3,"sources":["/Users/phamthixuanhien/Desktop/master_RS/Frontend/src/Components/RecommendationHandler/index.js"],"names":["React","useRef","useEffect","Form","Button","Col","Row","FormGroup","Label","Input","Card","CardBody","Select","makeAnimated","ModalFaded","useDispatch","useSelector","useHistory","toastErrorText","recommendCourses","RecommendationHandler","state","masterdataReducer","accountReducer","coursesReducer","lsJob","history","dispatch","recommendationInfo","occupation","form","month","typeFilter","onStorageEvent","key","oldValue","newValue","isRecommended","submit","window","addEventListener","removeEventListener","errs","current","email","user","push","length","forEach","err","localStorage","setItem","option","jobTitle","jobID","e","target","value","open"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { Form, Button, Col, Row, FormGroup, Label, Input, Card, CardBody } from \"reactstrap\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport ModalFaded from \"../../Pages/Components/Modal/Examples/ModalFaded\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { toastErrorText } from \"../../helpers/toastify\";\nimport { recommendCourses } from \"../../redux/actions/courses/courses\";\n\n\n\nfunction RecommendationHandler() {\n  const { masterdataReducer, accountReducer, coursesReducer } = useSelector((state) => state);\n  const { lsJob } = masterdataReducer;\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const recommendationInfo = useRef({\n    occupation: \"\",\n    form: \"\",\n    month: \"00\",\n    typeFilter: \"progress\",\n  });\n\n  useEffect(() => {\n    const onStorageEvent = ({key, oldValue, newValue}) => {\n      if (key === 'time_enroll') {\n        if (coursesReducer.isRecommended) {\n          submit();\n        }\n      }\n    }\n    window.addEventListener('storage', onStorageEvent);\n    return () => {\n      window.removeEventListener('storage', onStorageEvent)\n    }\n  }, [coursesReducer]);\n\n  const submit = () => {\n    const errs = [];\n    const { occupation, form, month, typeFilter } = recommendationInfo.current;\n    const { email } = accountReducer.user;\n    // validation\n    if (!occupation) {\n      errs.push(\"Occupation is required\");\n    }\n    if (!email) {\n      history.push(\"/login\");\n      return;\n    }\n    // fire errs message \n    if (errs.length) {\n      errs.forEach((err) => {\n        toastErrorText(err);\n      });\n    } else { // call api to RS server\n      localStorage.setItem(\"Form\", form);\n      dispatch(recommendCourses(occupation, form, month, email, typeFilter));\n    }\n  }\n\n\n  return (\n<Card>\n      <CardBody>\n        <Row form> \n      \n          <Col md={2}>\n            \n            <FormGroup>\n              <Label for=\"exampleName\">Position Job</Label>\n              <Select\n                components={makeAnimated()}\n                closeMenuOnSelect={false}\n                getOptionLabel={(option) => option.jobTitle}\n                getOptionValue={(option) => option.jobID}\n                options={lsJob}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={(e) => {\n                  recommendationInfo.current.occupation = e.jobID;\n                }}\n              />\n            </FormGroup>\n          </Col>\n\n          <Col md={2}>\n            <FormGroup>\n              <Label for=\"exampleName\">Study Method</Label>\n              <Input\n                type=\"select\"\n                onChange={(e) => {\n                  recommendationInfo.current.form = e.target.value;\n                }}\n              >\n                <option value={\"\"}>Choose study method</option>\n                <option value={\"online\"}>Online</option>\n                <option value={\"offline\"}>Offline</option>\n              </Input>\n            </FormGroup>\n          </Col>\n\n          <Col md={2}>\n            <FormGroup>\n              <Label for=\"exampleName\">Maximum study period</Label>\n              <Input\n                type=\"select\"\n                onChange={(e) => {\n                  recommendationInfo.current.month = e.target.value;\n                }}\n              >\n                <option value={\"00\"}>Choose month</option>\n                <option value={\"01\"}>1 Month</option>\n                <option value={\"02\"}>2 Months</option>\n                <option value={\"03\"}>3 Months</option>\n                <option value={\"04\"}>4 Months</option>\n                <option value={\"05\"}>5 Months</option>\n                <option value={\"06\"}>6 Months</option>\n                <option value={\"07\"}>7 Months</option>\n                <option value={\"08\"}>8 Months</option>\n                <option value={\"09\"}>9 Months</option>\n                <option value={\"10\"}>10 Months</option>\n                <option value={\"11\"}>11 Months</option>\n                <option value={\"12\"}>12 Months</option>\n              </Input>\n            </FormGroup>\n          </Col>\n\n          <Col md={2}>\n            <FormGroup>\n              <Label for=\"exampleName\">Kind of recommendation systems</Label>\n              <Input\n                type=\"select\"\n                onChange={(e) => {\n                  recommendationInfo.current.typeFilter = e.target.value;\n                }}\n              >\n                <option value={\"top\"}>Top 10 courses</option>\n                <option value={\"progress\"}>Learning Path</option>\n              </Input>\n            </FormGroup>\n          </Col>\n\n          <Col md={2}>\n            <FormGroup>\n              <ModalFaded submit={submit}></ModalFaded>\n            </FormGroup>\n          </Col>\n\n          <Col md={2}>\n            <FormGroup>\n              <Label for=\"exampleName\">Evaluation Recommendation Systems</Label>\n            \n              <Button variant=\"contained\" color=\"success\"\n              onClick={(e) => {window.open(\n                    'https://docs.google.com/forms/d/e/1FAIpQLSc_YfWh5VU5TRhu7bC0tluDmMB6xdB-YeXr5dlrGHT3KMqZYg/viewform',\n                    '_blank' // <- This is what makes it open in a new window.\n                  );\n                }}>\n                Take the survey\n              </Button>\n              \n            </FormGroup>\n\n          </Col> \n\n        </Row>\n      </CardBody>\n    </Card>\n\n  );\n}\n\nexport default RecommendationHandler;\n"]},"metadata":{},"sourceType":"module"}