{"ast":null,"code":"function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/* ===============================\n * Rodal v1.7.0 https://chenjiahan.github.com/rodal\n * =============================== */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames'; // env\n\nvar IN_BROWSER = typeof window !== 'undefined';\nvar UA = IN_BROWSER && window.navigator.userAgent.toLowerCase();\nvar IS_IE_9 = UA && UA.indexOf('msie 9.0') > 0;\n\nvar Dialog = function Dialog(props) {\n  var animation = (props.animationType === 'enter' ? props.enterAnimation : props.leaveAnimation) || props.animation;\n  var className = \"rodal-dialog rodal-\" + animation + \"-\" + props.animationType;\n  var CloseButton = props.showCloseButton ? React.createElement(\"span\", {\n    className: \"rodal-close\",\n    onClick: props.onClose,\n    onKeyPress: function onKeyPress(event) {\n      if (props.onClose && event.which === 13) {\n        props.onClose(event);\n      }\n    },\n    tabIndex: 0\n  }) : null;\n  var width = props.width,\n      height = props.height,\n      measure = props.measure,\n      duration = props.duration,\n      customStyles = props.customStyles;\n  var style = {\n    width: width + measure,\n    height: height + measure,\n    animationDuration: duration + 'ms',\n    WebkitAnimationDuration: duration + 'ms'\n  };\n\n  var mergedStyles = _extends({}, style, {}, customStyles);\n\n  return React.createElement(\"div\", {\n    style: mergedStyles,\n    className: className\n  }, props.children, CloseButton);\n};\n\nvar Rodal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Rodal, _React$Component);\n\n  function Rodal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isShow: false,\n      animationType: 'leave'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyUp\", function (event) {\n      if (!_this.props.closeOnEsc || event.keyCode !== 27) {\n        return;\n      }\n\n      _this.props.onClose(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animationEnd\", function (event) {\n      var animationType = _this.state.animationType;\n      var _this$props = _this.props,\n          closeOnEsc = _this$props.closeOnEsc,\n          onAnimationEnd = _this$props.onAnimationEnd;\n\n      if (animationType === 'leave') {\n        _this.setState({\n          isShow: false\n        });\n      } else if (closeOnEsc) {\n        _this.el.focus();\n      }\n\n      if (event.target === _this.el && onAnimationEnd) {\n        onAnimationEnd();\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = Rodal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.visible) {\n      this.enter();\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.visible && !prevProps.visible) {\n      this.enter();\n    }\n\n    if (!this.props.visible && prevProps.visible) {\n      this.leave();\n    }\n  };\n\n  _proto.enter = function enter() {\n    this.setState({\n      isShow: true,\n      animationType: 'enter'\n    });\n  };\n\n  _proto.leave = function leave() {\n    this.setState(IS_IE_9 ? {\n      isShow: false\n    } : {\n      animationType: 'leave'\n    });\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        closeMaskOnClick = _this$props2.closeMaskOnClick,\n        onClose = _this$props2.onClose,\n        customMaskStyles = _this$props2.customMaskStyles,\n        showMask = _this$props2.showMask,\n        duration = _this$props2.duration,\n        className = _this$props2.className,\n        children = _this$props2.children;\n    var _this$state = this.state,\n        isShow = _this$state.isShow,\n        animationType = _this$state.animationType;\n    var Mask = showMask ? React.createElement(\"div\", {\n      className: \"rodal-mask\",\n      style: customMaskStyles,\n      onClick: closeMaskOnClick ? onClose : void 0\n    }) : null;\n    var style = {\n      display: isShow ? '' : 'none',\n      animationDuration: duration + 'ms',\n      WebkitAnimationDuration: duration + 'ms'\n    };\n    return React.createElement(\"div\", {\n      style: style,\n      className: cx('rodal', \"rodal-fade-\" + animationType, className),\n      onAnimationEnd: this.animationEnd,\n      tabIndex: \"-1\",\n      ref: function ref(el) {\n        _this2.el = el;\n      },\n      onKeyUp: this.onKeyUp\n    }, Mask, React.createElement(Dialog, _extends({}, this.props, {\n      animationType: animationType\n    }), children));\n  };\n\n  return Rodal;\n}(React.Component);\n\n_defineProperty(Rodal, \"propTypes\", {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  measure: PropTypes.string,\n  visible: PropTypes.bool,\n  showMask: PropTypes.bool,\n  closeOnEsc: PropTypes.bool,\n  closeMaskOnClick: PropTypes.bool,\n  showCloseButton: PropTypes.bool,\n  animation: PropTypes.string,\n  enterAnimation: PropTypes.string,\n  leaveAnimation: PropTypes.string,\n  duration: PropTypes.number,\n  className: PropTypes.string,\n  customStyles: PropTypes.object,\n  customMaskStyles: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n  onAnimationEnd: PropTypes.func\n});\n\n_defineProperty(Rodal, \"defaultProps\", {\n  width: 400,\n  height: 240,\n  measure: 'px',\n  visible: false,\n  showMask: true,\n  closeOnEsc: false,\n  closeMaskOnClick: true,\n  showCloseButton: true,\n  animation: 'zoom',\n  enterAnimation: '',\n  leaveAnimation: '',\n  duration: 300,\n  className: '',\n  customStyles: {},\n  customMaskStyles: {}\n});\n\nexport default Rodal;","map":null,"metadata":{},"sourceType":"module"}