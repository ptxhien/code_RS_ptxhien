{"ast":null,"code":"import _objectSpread from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { stringify } from \"query-string\";\nimport * as Types from \"../../constants/actionType\";\nvar initialState = {\n  user: {},\n  isLogged: false,\n  error: \"\",\n  authToken: \"\",\n  isLoading: false\n};\n\nvar account = function account() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.LOG_OUT:\n      {\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"learnerID\");\n        localStorage.removeItem(\"email\");\n        localStorage.removeItem(\"fullname\");\n        return initialState;\n      }\n\n    case Types.LOGIN_FAILURE:\n      {\n        var message = action.payload.message;\n        return _objectSpread({}, state, {\n          isLoading: false,\n          user: {},\n          error: message\n        });\n      }\n\n    case Types.LOGIN:\n      {\n        var _action$payload = action.payload,\n            authToken = _action$payload.authToken,\n            user = _action$payload.user;\n        localStorage.setItem(\"authToken\", authToken);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        return {\n          user: user,\n          authToken: authToken,\n          isLogged: true,\n          isLoading: false,\n          error: \"\"\n        };\n      }\n\n    case Types.REGISTER:\n      {\n        var _action$payload2 = action.payload,\n            _authToken = _action$payload2.authToken,\n            _user = _action$payload2.user;\n        localStorage.setItem(\"authToken\", _authToken);\n        localStorage.setItem(\"user\", JSON.stringify(_user));\n        return {\n          user: _user,\n          authToken: _authToken,\n          isLogged: true,\n          isLoading: false,\n          error: \"\"\n        };\n      }\n\n    case Types.AUTH_UPDATE:\n      {\n        var _user2 = action.payload.user;\n\n        var _authToken2 = localStorage.getItem(\"authToken\");\n\n        localStorage.setItem(\"user\", JSON.stringify(_user2));\n        return {\n          user: _user2,\n          authToken: _authToken2,\n          isLogged: true,\n          isLoading: false,\n          error: \"\"\n        };\n      }\n\n    case Types.RETRIEVE:\n      {\n        var _action$payload3 = action.payload,\n            _user3 = _action$payload3.user,\n            _authToken3 = _action$payload3.authToken;\n        return _objectSpread({}, state, {\n          user: _user3,\n          authToken: _authToken3,\n          isLogged: true\n        });\n      }\n\n    case Types.LOADING:\n      {\n        return _objectSpread({}, state, {\n          error: \"\",\n          isLoading: true\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default account;","map":{"version":3,"sources":["/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/src/redux/reducers/account/accountReducer.js"],"names":["stringify","Types","initialState","user","isLogged","error","authToken","isLoading","account","state","action","type","LOG_OUT","localStorage","removeItem","LOGIN_FAILURE","message","payload","LOGIN","setItem","JSON","REGISTER","AUTH_UPDATE","getItem","RETRIEVE","LOADING"],"mappings":"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","sourcesContent":["import { stringify } from \"query-string\";\nimport * as Types from \"../../constants/actionType\";\n\nvar initialState = {\n  user: {},\n  isLogged: false,\n  error: \"\",\n  authToken: \"\",\n  isLoading: false,\n};\n\nconst account = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.LOG_OUT: {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"learnerID\");\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"fullname\");\n      return initialState;\n    }\n    case Types.LOGIN_FAILURE: {\n      const { message } = action.payload;\n      return {\n        ...state,\n        isLoading: false,\n        user: {},\n        error: message,\n      };\n    }\n    case Types.LOGIN: {\n      const { authToken, user } = action.payload;\n      localStorage.setItem(\"authToken\", authToken);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return {\n        user,\n        authToken,\n        isLogged: true,\n        isLoading: false,\n        error: \"\",\n      };\n    }\n    case Types.REGISTER: {\n      const { authToken, user } = action.payload;\n      localStorage.setItem(\"authToken\", authToken);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return {\n        user,\n        authToken,\n        isLogged: true,\n        isLoading: false,\n        error: \"\",\n      };\n    }\n    case Types.AUTH_UPDATE: {\n      const { user } = action.payload;\n      const authToken = localStorage.getItem(\"authToken\");\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return {\n        user,\n        authToken,\n        isLogged: true,\n        isLoading: false,\n        error: \"\"\n      };\n    }\n    case Types.RETRIEVE: {\n      const { user, authToken } = action.payload;\n      return {\n        ...state,\n        user,\n        authToken,\n        isLogged: true,\n      };\n    }\n    case Types.LOADING: {\n      return { ...state, error: \"\", isLoading: true };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default account;\n"]},"metadata":{},"sourceType":"module"}