{"ast":null,"code":"import _regeneratorRuntime from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { toastErrorText } from \"../../helpers/toastify\";\nimport * as Types from \"../constants/actionType\";\nimport { API_ROUTE } from \"../constants/constant\";\nimport { callApiNoAuthen } from \"../utils/apiCaller\";\nimport http from \"../utils/http\"; //#region  Login\n\nexport var GetAllLanguageAction = function GetAllLanguageAction() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$http$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: Types.JOB_LOADING\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return http.get(\"/languages\");\n\n            case 4:\n              _yield$http$get = _context.sent;\n              data = _yield$http$get.data;\n              dispatch({\n                type: Types.GET_LANGUAGE,\n                data: data\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: Types.GET_DATA_ERROR\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var GetAllTechnologyAction = function GetAllTechnologyAction() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var _yield$http$get2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: Types.JOB_LOADING\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return http.get(\"/technologies\");\n\n            case 4:\n              _yield$http$get2 = _context2.sent;\n              data = _yield$http$get2.data;\n              dispatch({\n                type: Types.GET_TECHNOLOGY,\n                data: data\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: Types.GET_DATA_ERROR\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var GetFreeTimeAction = function GetFreeTimeAction() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var _yield$http$get3, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch({\n                type: Types.JOB_LOADING\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return http.get(\"/freetime\");\n\n            case 4:\n              _yield$http$get3 = _context3.sent;\n              data = _yield$http$get3.data;\n              dispatch({\n                type: Types.GET_FREE_TIME,\n                data: data\n              });\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n              dispatch({\n                type: Types.GET_DATA_ERROR\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 9]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var GetJobAction = function GetJobAction() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var _yield$http$get4, data;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: Types.JOB_LOADING\n              });\n              _context4.prev = 1;\n              _context4.next = 4;\n              return http.get(\"/jobs\");\n\n            case 4:\n              _yield$http$get4 = _context4.sent;\n              data = _yield$http$get4.data;\n              dispatch({\n                type: Types.GET_JOB,\n                data: data\n              });\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](1);\n              dispatch({\n                type: Types.GET_DATA_ERROR\n              });\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 9]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var GetAllMajorAction = function GetAllMajorAction() {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var _yield$http$get5, data;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dispatch({\n                type: Types.JOB_LOADING\n              });\n              _context5.prev = 1;\n              _context5.next = 4;\n              return http.get(\"/major\");\n\n            case 4:\n              _yield$http$get5 = _context5.sent;\n              data = _yield$http$get5.data;\n              dispatch({\n                type: Types.GET_MAJOR,\n                data: data\n              });\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              dispatch({\n                type: Types.GET_DATA_ERROR\n              });\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/src/redux/masterdata/masterDataAction.js"],"names":["axios","toastErrorText","Types","API_ROUTE","callApiNoAuthen","http","GetAllLanguageAction","dispatch","type","JOB_LOADING","get","data","GET_LANGUAGE","GET_DATA_ERROR","GetAllTechnologyAction","GET_TECHNOLOGY","GetFreeTimeAction","GET_FREE_TIME","GetJobAction","GET_JOB","GetAllMajorAction","GET_MAJOR"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { toastErrorText } from \"../../helpers/toastify\";\r\nimport * as Types from \"../constants/actionType\";\r\nimport { API_ROUTE } from \"../constants/constant\";\r\nimport { callApiNoAuthen } from \"../utils/apiCaller\";\r\nimport http from \"../utils/http\";\r\n//#region  Login\r\nexport const GetAllLanguageAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: Types.JOB_LOADING });\r\n    try {\r\n      const { data } = await http.get(\"/languages\");\r\n      dispatch({\r\n        type: Types.GET_LANGUAGE,\r\n        data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: Types.GET_DATA_ERROR,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const GetAllTechnologyAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: Types.JOB_LOADING });\r\n    try {\r\n      const { data } = await http.get(\"/technologies\");\r\n      dispatch({\r\n        type: Types.GET_TECHNOLOGY,\r\n        data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: Types.GET_DATA_ERROR,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const GetFreeTimeAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: Types.JOB_LOADING });\r\n    try {\r\n      const { data } = await http.get(\"/freetime\");\r\n      dispatch({\r\n        type: Types.GET_FREE_TIME,\r\n        data: data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: Types.GET_DATA_ERROR,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const GetJobAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: Types.JOB_LOADING });\r\n    try {\r\n      const {data} = await http.get(\"/jobs\");\r\n      dispatch({\r\n        type: Types.GET_JOB,\r\n        data\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: Types.GET_DATA_ERROR,\r\n      })\r\n    }\r\n    \r\n  };\r\n};\r\n\r\nexport const GetAllMajorAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: Types.JOB_LOADING });\r\n    try {\r\n      const { data } = await http.get(\"/major\");\r\n      dispatch({\r\n        type: Types.GET_MAJOR,\r\n        data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: Types.GET_DATA_ERROR,\r\n      });\r\n    }\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}