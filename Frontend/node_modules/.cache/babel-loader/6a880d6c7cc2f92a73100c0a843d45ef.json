{"ast":null,"code":"import _regeneratorRuntime from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as Types from \"./../../constants/actionType\";\nimport http from \"../../utils/http\";\nimport axios from \"axios\";\nexport var getCourses = function getCourses() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$http$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: Types.COURSE_LOADING\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return http.get(\"/courses\");\n\n            case 4:\n              _yield$http$get = _context.sent;\n              data = _yield$http$get.data;\n              dispatch({\n                type: Types.GET_COURSES,\n                payload: {\n                  data: data\n                }\n              });\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0.message);\n              dispatch({\n                type: Types.GET_COURSES_FAILED\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var recommendCourses = function recommendCourses(occupation, form, month, email, typeFilter) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: Types.COURSE_LOADING\n              });\n              _context2.prev = 1;\n              console.log(\"http://127.0.0.1:6868/recommendation?occupation=\".concat(occupation, \"&form=\").concat(form, \"&month=\").concat(month, \"&email=\").concat(email, \"&typeFilter=\").concat(typeFilter));\n              _context2.next = 5;\n              return axios.get(\"http://127.0.0.1:6868/recommendation?occupation=\".concat(occupation, \"&form=\").concat(form, \"&month=\").concat(month, \"&email=\").concat(email, \"&typeFilter=\").concat(typeFilter));\n\n            case 5:\n              _yield$axios$get = _context2.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: Types.RECOMMENDATION,\n                payload: {\n                  data: data\n                }\n              });\n              _context2.next = 12;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 10]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/phamthixuanhien/Desktop/ptxhien_rs_courses/Frontend/src/redux/actions/courses/courses.js"],"names":["Types","http","axios","getCourses","dispatch","type","COURSE_LOADING","get","data","GET_COURSES","payload","console","log","message","GET_COURSES_FAILED","recommendCourses","occupation","form","month","email","typeFilter","RECOMMENDATION"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,wEAAM,iBAAMC,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC9BA,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEL,KAAK,CAACM;AADL,eAAD,CAAR;AAD8B;AAAA;AAAA,qBAKPL,IAAI,CAACM,GAAL,CAAS,UAAT,CALO;;AAAA;AAAA;AAKrBC,cAAAA,IALqB,mBAKrBA,IALqB;AAM5BJ,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEL,KAAK,CAACS,WADL;AAEPC,gBAAAA,OAAO,EAAE;AACPF,kBAAAA,IAAI,EAAJA;AADO;AAFF,eAAD,CAAR;AAN4B;AAAA;;AAAA;AAAA;AAAA;AAa5BG,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAIC,OAAhB;AACAT,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEL,KAAK,CAACc;AADL,eAAD,CAAR;;AAd4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAoBP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAaC,IAAb,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,UAAjC;AAAA;AAAA,yEAAgD,kBAAMhB,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC9EA,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEL,KAAK,CAACM;AADL,eAAD,CAAR;AAD8E;AAK5EK,cAAAA,OAAO,CAACC,GAAR,2DAA+DI,UAA/D,mBAAkFC,IAAlF,oBAAgGC,KAAhG,oBAA+GC,KAA/G,yBAAmIC,UAAnI;AAL4E;AAAA,qBAMrDlB,KAAK,CAACK,GAAN,2DAC8BS,UAD9B,mBACiDC,IADjD,oBAC+DC,KAD/D,oBAC8EC,KAD9E,yBACkGC,UADlG,EANqD;;AAAA;AAAA;AAMpEZ,cAAAA,IANoE,oBAMpEA,IANoE;AAS5EJ,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEL,KAAK,CAACqB,cADL;AAEPX,gBAAAA,OAAO,EAAE;AACPF,kBAAAA,IAAI,EAAJA;AADO;AAFF,eAAD,CAAR;AAT4E;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhD;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB","sourcesContent":["import * as Types from \"./../../constants/actionType\";\nimport http from \"../../utils/http\";\nimport axios from \"axios\";\n\n\nexport const getCourses = () => async dispatch => {\n  dispatch({\n    type: Types.COURSE_LOADING,\n  });\n  try {\n    const {data} = await http.get(\"/courses\");\n    dispatch({\n      type: Types.GET_COURSES,\n      payload: {\n        data,\n      },\n    });\n  } catch (err) {\n    console.log(err.message)\n    dispatch({\n      type: Types.GET_COURSES_FAILED,\n    });\n  }\n};\n\nexport const recommendCourses = (occupation, form, month, email, typeFilter) => async dispatch => {\n  dispatch({\n    type: Types.COURSE_LOADING,\n  });\n  try {\n    console.log(`http://127.0.0.1:6868/recommendation?occupation=${occupation}&form=${form}&month=${month}&email=${email}&typeFilter=${typeFilter}`)\n    const { data } = await axios.get(\n      `http://127.0.0.1:6868/recommendation?occupation=${occupation}&form=${form}&month=${month}&email=${email}&typeFilter=${typeFilter}`\n    );\n    dispatch({\n      type: Types.RECOMMENDATION,\n      payload: {\n        data,\n      },\n    });\n  } catch (err) {\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}