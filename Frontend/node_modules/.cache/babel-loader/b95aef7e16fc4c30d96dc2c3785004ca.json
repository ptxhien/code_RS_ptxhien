{"ast":null,"code":"import axios from \"axios\";\nimport queryString from \"query-string\";\nvar API_URL = \"http://localhost:8080/api\";\nvar http = axios.create({\n  baseURL: API_URL,\n  headers: {\n    // \"Authorization\": localStorage.getItem(\"token\") ? `Bearer ${localStorage.getItem(\"token\")}` : undefined,\n    \"content-type\": \"application/json\"\n  },\n  paramsSerializer: function paramsSerializer(params) {\n    return queryString.stringify(params);\n  }\n});\nhttp.interceptors.request.use(function (config) {\n  var jwt = localStorage.getItem(\"authToken\");\n\n  if (jwt) {\n    config.headers = {\n      auth: \"\".concat(jwt)\n    };\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nhttp.interceptors.response.use(function (response) {\n  // Return JSON data\n  if (response.data) {\n    return response.data;\n  }\n\n  return response;\n}, function (error) {\n  // if (error?.response?.errId) {\n  //   toast.error(errorMes[error?.response?.errId]);\n  // }\n  // Attempt to get the actual error returned from API\n  var err = error.response && error.response.data || error;\n  return Promise.reject(err); // Propagate rejection back to caller\n});\nexport default http;","map":{"version":3,"sources":["/Users/phamthixuanhien/Desktop/master_RS/Frontend/src/redux/utils/http.js"],"names":["axios","queryString","API_URL","http","create","baseURL","headers","paramsSerializer","params","stringify","interceptors","request","use","config","jwt","localStorage","getItem","auth","error","Promise","reject","response","data","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,IAAMC,OAAO,GAAG,2BAAhB;AAEA,IAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEH,OADe;AAExBI,EAAAA,OAAO,EAAE;AACP;AACA,oBAAgB;AAFT,GAFe;AAMxBC,EAAAA,gBAAgB,EAAE,0BAACC,MAAD;AAAA,WAAYP,WAAW,CAACQ,SAAZ,CAAsBD,MAAtB,CAAZ;AAAA;AANM,CAAb,CAAb;AAQAL,IAAI,CAACO,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CACE,UAACC,MAAD,EAAY;AACV,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAZ;;AACA,MAAIF,GAAJ,EAAS;AACPD,IAAAA,MAAM,CAACP,OAAP,GAAiB;AACfW,MAAAA,IAAI,YAAKH,GAAL;AADW,KAAjB;AAGD;;AACD,SAAOD,MAAP;AACD,CATH,EAUE,UAACK,KAAD;AAAA,SAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAX;AAAA,CAVF;AAaAf,IAAI,CAACO,YAAL,CAAkBW,QAAlB,CAA2BT,GAA3B,CACE,UAACS,QAAD,EAAc;AACZ;AACA,MAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB,WAAOD,QAAQ,CAACC,IAAhB;AACD;;AACD,SAAOD,QAAP;AACD,CAPH,EAQE,UAACH,KAAD,EAAW;AACT;AACA;AACA;AACA;AACA,MAAMK,GAAG,GAAIL,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeC,IAAlC,IAA2CJ,KAAvD;AAEA,SAAOC,OAAO,CAACC,MAAR,CAAeG,GAAf,CAAP,CAPS,CAOmB;AAC7B,CAhBH;AAmBA,eAAepB,IAAf","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\n\nconst API_URL = \"http://localhost:8080/api\";\n\nconst http = axios.create({\n  baseURL: API_URL,\n  headers: {\n    // \"Authorization\": localStorage.getItem(\"token\") ? `Bearer ${localStorage.getItem(\"token\")}` : undefined,\n    \"content-type\": \"application/json\",\n  },\n  paramsSerializer: (params) => queryString.stringify(params),\n});\nhttp.interceptors.request.use(\n  (config) => {\n    const jwt = localStorage.getItem(\"authToken\");\n    if (jwt) {\n      config.headers = {\n        auth: `${jwt}`,\n      };\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nhttp.interceptors.response.use(\n  (response) => {\n    // Return JSON data\n    if (response.data) {\n      return response.data;\n    }\n    return response;\n  },\n  (error) => {\n    // if (error?.response?.errId) {\n    //   toast.error(errorMes[error?.response?.errId]);\n    // }\n    // Attempt to get the actual error returned from API\n    const err = (error.response && error.response.data) || error;\n\n    return Promise.reject(err); // Propagate rejection back to caller\n  }\n);\n\nexport default http;\n"]},"metadata":{},"sourceType":"module"}