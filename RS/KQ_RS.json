{
    "courses_online": {
        "status": 200,
        "message": "PASS",
        "Course": [
            {
                "courseID": "COURSE_145",
                "courseTitle": "Build Mobile Testing Device Farm / Device Lab From Scratch\n",
                "Tech_Skill": "Appium, Jenkins, Python",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "RAS, STF, Jenkins, Python RPC, OpenSTF, AWS Device Farm, Selenium GRID, Appium, Python, API, RESTful API, APIs, CI/CD",
                "outcomeLearning": "Basic understanding of Device Farm / Device Lab concepts and various types.\nOpenSTF / Device Farmer details, install/deploy, admin activity, user groups, device distribution, Device Remote Access, REST APIs of STF.\nOpenSTF / Device Farmer integration with Python RPC server (STF Service monitoring, API Gateway, Reserve Device, Release Device, Appium integration etc).\nJenkins Embedded Device Farm (unique concept to develop Jenkins infrastructure with real devices for CI/CD), Selenium GRID & Appium",
                "provider": "Udemy",
                "duration": "05:25:00",
                "feeVND": "322078.0",
                "URL": "https://www.udemy.com/course/mobile-device-farm-stf-python-jenkins-selenium/",
                "language": "English",
                "rating": "5.0",
                "peopleRating": "8",
                "location": "",
                "level": "ALL Levels",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_032",
                "courseTitle": "Back-End Engineer1",
                "Tech_Skill": "Docker, Git, GitHub",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Kubernetes, PostgreSQL, JavaScript, Scrum, OOP, SQL, Oauth, Node.js, HTTP, Express.js, GitHub, Git, Agile, YAGNI, Docker, KISS, Azure DevOps, API, TDD, Design Patterns, RDBMS, DRY, SOLID, Linear Data Structures, Complex Data Structures, Search Algorithm",
                "outcomeLearning": "Setting Up Your Dev Environment. Learn about the field of web development and the tools developers use to create websites. JavaScript Syntax, Part I. Get introduced to JavaScript and get comfortable with the basics of writing JavaScript programs. JavaScript Syntax, Part II. Discover more JavaScript techniques and features including arrays, looping, and objects. Git and Github, Part I. Learn how to use the Git version control system to keep track of changes and document your work. Then learn markdown and publish your first. JavaScript Syntax Portfolio Project. Build a Node.js console app that generates random messages each time a user runs the program and version your project with Git/GitHub. Basics of Back-End Development. Start learning about back-end development and programming servers. JavaScript Syntax, Part III. Understand intermediate JavaScript concepts, such as classes, modules, and error handling. Fundamentals of Operating Systems. Learn about how Operating Systems work. Build a Back-End with Node/Express.js. Learn about the popular back-end environment, Node.js and how to create back-end servers and APIs in JavaScript using the popular Express.js. Test Driven Development with JavaScript. Understand the fundamentals of Test Driven Development (TDD) and how you can apply its principles when developing back-ends. Website Development Fundamentals. Be introduced to the field of front-end web development and create your first web page on the internet. Building Interactive Websites with JavaScript. Understand how JavaScript is used to add interactive experiences to a website. Async JavaScript and HTTP Requests. Learn about APIs (Application Programming Interfaces). Working with APIs will enable you to work with data stored on remote servers. Git and GitHub, Part II. Learn how to use Git and GitHub to collaborate efficiently with developers. Node/Express API Portfolio Project. You can use Node and Express to build an API that allows users to create and manage a personal budget. SQL for Back-End Development. Learn how to create tables, create, retrieve, and update data in SQL databases, and build a data-intensive web app. PostgreSQL Database. Much of the internet is the flow of information. Learn how databases store data so that it can be displayed on the web using PostgreSQL. Designing Relational Databases. Learn how to design relational databases that you can then implement in PostgreSQL advanced PostgreSQL. Learn about database performance and techniques for efficiently accessing data and maintaining optimal performance. Connecting Your Database to a Server\nLearn how to integrate a PostgreSQL database into your application. Deploying Your Server. Learn how to build an API with Node, Express, PostgreSQL and deploy it to Heroku. YAGNI, KISS, and DRY. Learn about different software principles. Object-Oriented Design & SOLID. Learn about object-oriented programming (OOP) and the principles of encapsulation, abstraction, inheritance, polymorphism as well as SOLID. Common Design Patterns. The goal of this unit is to introduce the concept of software design patterns. Software Architectural Patterns. Learn about the concept of architectural patterns as well as learn about specific patterns currently used by the development community. Relational Database and Software Architecture Portfolio Project\nTake your budget app one step further and add a new layer to the project by setting up a database. Security Basics. The goal of this unit is to introduce the basic concepts of web security including common threats, best practices and available technologies. Web Security. Learn intermediate concepts in web security and look at prevention techniques for common threats. Securing Your Server. Identify techniques you can use to secure your applications. Protecting Resources with OAuth. Learn how to protect your resources with authorization and authentication techniques. Database Security. Secure your databases from SQL injections and with security measures specifically for PostgreSQL. Introduction to Enterprise Development. Get an overview of the technologies involved in enterprise development. Caching & CDNs. Learn about how content is stored on different servers with caching and CDNs. Scaling Your Server. Learn different strategies for scaling your server. Alternative Technology Approaches. Get an introduction to several technologies that can expand your understanding of back-end architecture. Agile Methodologies. Learn about Agile methodologies and Scrum. Intro to DevOps Strategies. Learn about Continuous Integration and Continuous Delivery and how to implement them with GitHub Actions. Containerization with Docker. Learn about containerization technology and how to use services like Docker and Kubernetes. Security and Enterprise Portfolio Project. Build an API with Node, Express, and Postgres that uses authentication and authorization best practices to manage an online contest. Linear Data Structures. Begin interview preparation by learning the fundamentals of linear data structures. Complex Data Structures. Continue interview preparation by learning advanced applications of data structures.Algorithms. Continue interview preparation by learning the fundamentals of algorithms. Search & Graph Search Algorithms. Continue interview preparation by learning the fundamentals of search algorithms. Interview Skills. Review some key technical interview topics as well as soft skills which employers are looking for in potential candidates. Final Back-End Portfolio Project. Use everything you've learned in the path to build an API of your choosing.",
                "provider": "Codecademy",
                "duration": "2 months",
                "feeVND": "0.0",
                "URL": "https://www.codecademy.com/learn/paths/back-end-engineer-career-path",
                "language": "English",
                "rating": "4.6",
                "peopleRating": "9794",
                "location": "",
                "level": "Beginner",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_102",
                "courseTitle": "Learn Google Admob, Analytics, and In App Purchases in Swift",
                "Tech_Skill": "Java, Xcode",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "iOS, Google Admob, Swift, Google Analytics, Xcode, SwiftUI, JavaScript, Java, Kotlin, Google Flutter, Objective C, Firebase, Android",
                "outcomeLearning": "Are you an iOS developer and have a passion for making apps?\nAre you looking to make a little money on the side from your apps by installing ads and offering In App Purchases?\nIf so this course is for you!\nIn this course we will be going over:\nHow to setup and install Google Analytics\nHow to setup and install Google Admob\nHow to setup and install In App Purchases\nThis course uses Apple development language Swift to implement these features.\nIf you are a beginner Swift programmer or an experienced one and are looking to add Google Analytics, Google Admob, and In App Purchases into your app than this is the course for you!Are you an iOS developer and have a passion for making apps?\nAre you looking to make a little money on the side from your apps by installing ads and offering In App Purchases?\nIf so this course is for you!\nIn this course we will be going over:\nHow to setup and install Google Analytics\nHow to setup and install Google Admob\nHow to setup and install In App Purchases\nThis course uses Apple development language Swift to implement these features.\nIf you are a beginner Swift programmer or an experienced one and are looking to add Google Analytics, Google Admob, and In App Purchases into your app than this is the course for you!",
                "provider": "Udemy",
                "duration": "00:53:00",
                "feeVND": "322078.0",
                "URL": "https://bit.ly/3fehR2H",
                "language": "English",
                "rating": "3.2",
                "peopleRating": "52",
                "location": "",
                "level": "ALL Levels",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_223",
                "courseTitle": "IBM Data Analyst Professional Certificate 1",
                "Tech_Skill": "Amazon Web Services (AWS)",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Microsoft Excel, Matplotlib, NumPy, SQL, Cognos, Amazon Web Services (AWS), Python, API, Pandas, Jupyter, Data Visualization, Pivot Table, Dashboard, Pandas, APIs",
                "outcomeLearning": "Demonstrate proficiency in using spreadsheets and utilizing Excel to perform a variety of data analysis tasks like data wrangling and data mining. Create various charts and plots in Excel & work with IBM Cognos Analytics to build dashboards. Visualize data using Python libraries like Matplotlib. Develop working knowledge of Python language for analyzing data using Python libraries like Pandas and Numpy, and invoke APIs and Web Services. Describe data ecosystem and Compose queries to access data in cloud databases using SQL and Python from Jupyter Notebooks",
                "provider": "Udemy",
                "duration": "09:00:00",
                "feeVND": "0.0",
                "URL": "https://www.coursera.org/professional-certificates/ibm-data-analyst",
                "language": "English, Arabic, French, Portuguese, Italian, Vietnamese, German, Russian, Spanish",
                "rating": "4.7",
                "peopleRating": "4832",
                "location": "",
                "level": "Beginner",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_177",
                "courseTitle": "IBM Data Analyst Professional Certificate",
                "Tech_Skill": "Amazon Web Services (AWS)",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Microsoft Excel, Matplotlib, NumPy, SQL, Cognos, Amazon Web Services (AWS), Python, API, Pandas, Jupyter, Data Visualization, Pivot Table, Dashboard, Pandas, APIs",
                "outcomeLearning": "Demonstrate proficiency in using spreadsheets and utilizing Excel to perform a variety of data analysis tasks like data wrangling and data mining. Create various charts and plots in Excel & work with IBM Cognos Analytics to build dashboards. Visualize data using Python libraries like Matplotlib. Develop working knowledge of Python language for analyzing data using Python libraries like Pandas and Numpy, and invoke APIs and Web Services. Describe data ecosystem and Compose queries to access data in cloud databases using SQL and Python from Jupyter Notebooks",
                "provider": "Coursera",
                "duration": "09:00:00",
                "feeVND": "414166.0",
                "URL": "https://www.coursera.org/professional-certificates/ibm-data-analyst",
                "language": "English, Arabic, French, Portuguese, Italian, Vietnamese, German, Russian, Spanish",
                "rating": "4.7",
                "peopleRating": "4832",
                "location": "",
                "level": "Beginner",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_220",
                "courseTitle": "Data Engineering Foundations Specialization",
                "Tech_Skill": "IBM Db2",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "MySQL, ETL, NumPy, SQL, PostgreSQL, IBM Db2, API, Python, Pandas, RDBMS, DBMS, NoSQL, NumPy, Web Scraping",
                "outcomeLearning": "Working knowledge of Data Engineering Ecosystem and Lifecycle. Viewpoints and tips from Data professionals on starting a career in this domain. Relational Database fundamentals including Database Design, Creating Schemas, Tables, Constraints, and working with MySQL, PostgreSQL & IBM Db2. Python programming basics including data structures, logic, working with files, invoking APIs, using libraries such as Pandas and Numpy, doing ETL. SQL query language, SELECT, INSERT, UPDATE, DELETE statements, database functions, stored procs, working with multiple tables, JOINs, & transactions.",
                "provider": "Coursera",
                "duration": "18:00:00",
                "feeVND": "0.0",
                "URL": "https://www.coursera.org/specializations/data-engineering-foundations",
                "language": "English",
                "rating": "4.7",
                "peopleRating": "380",
                "location": "",
                "level": "Beginner",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_126",
                "courseTitle": "An Introduction to Programming the Internet of Things (IOT) Specialization",
                "Tech_Skill": "C",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Arduino, IoT, Raspberry Pi, Python, Microcontroller, Embedded System, Wireshark, C, API",
                "outcomeLearning": "Design, create, and deploy a fun IoT device using Arduino and Raspberry Pi platforms. This specialization covers embedded systems, the Raspberry Pi Platform, and the Arduino environment for building devices that can control the physical world. In the final Capstone Project, you'll apply the skills you learned by designing, building, and testing a microcontroller-based embedded system, producing a unique final project suitable for showcasing to future employers. Please note that this specialization does not offer discussion forums.",
                "provider": "Coursera",
                "duration": "18:00:00",
                "feeVND": "0.0",
                "URL": "https://www.coursera.org/specializations/iot",
                "language": "English, Arabic, French, Portuguese, Italian, Vietnamese, German, Russian, English, Spanish",
                "rating": "4.7",
                "peopleRating": "10604",
                "location": "",
                "level": "Beginner",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_070",
                "courseTitle": "Build Basic Android Apps with Java",
                "Tech_Skill": "XML",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Android, Android Studio, Java, XML, Wireframe, Programming Logic",
                "outcomeLearning": "Android and Java foundations. Wireframe your first app, learn about variables in Java, and dig into the Android Studio IDE. Learn about programming logic in Java and continue to build the Unquote trivia game. Learn about arrays and Loops in Java and continue to build out the Unquote game. Android App Development. Really dig into Android development fundamentals by working with Android Layouts and Views and handling user interactions. intermediate Java and Capstone Project. Pick up more Java programming skills and complete your Unquote application",
                "provider": "Codecademy",
                "duration": "10:00:00",
                "feeVND": "0.0",
                "URL": "https://www.codecademy.com/learn/paths/introduction-to-android-with-java",
                "language": "English",
                "rating": "4.6",
                "peopleRating": "9794",
                "location": "",
                "level": "Beginner",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_131",
                "courseTitle": "Docker for the Absolute Beginner - Hands On - DevOps",
                "Tech_Skill": "Docker",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Docker, Dockerfile, Azure DevOps, Docker Compose, Docker Swarm",
                "outcomeLearning": "Docker is an open platform for developers and sysadmins to build, ship, and run distributed applications, whether on laptops, data center VMs, or the cloud. This course introduces Docker to an Absolute Beginner using really simple and easy to understand lectures. Lectures are followed by demos showing how to setup and get started with Docker. The coding exercises that accompany this course will help you practice Docker commands and developing your own images using Dockerfiles and practice Docker Compose. You will be developing Docker files for different use cases right in your browser. This way you don't really need to have your own environment setup to get some hands on practice. The coding exercises will validate your commands and Dockerfiles and ensure you have written them correctly. And finally we have assignments to put your skills to test. You will be given a challenge to solve using the skills you gained during this course. This is a great way to gain a real life project experience and work with the other students in the community to develop a Dockerfile and get feedback for your work. The assignment will push you to research and develop your own Docker images. This course is designed for beginners in DevOps",
                "provider": "Udemy",
                "duration": "04:17:00",
                "feeVND": "322078.0",
                "URL": "https://www.udemy.com/course/learn-docker/",
                "language": "English, French, German, Indonesian, Italian, Polish, Portuguese, Spanish",
                "rating": "4.6",
                "peopleRating": "23875",
                "location": "",
                "level": "Beginner",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_143",
                "courseTitle": "Become a Master Commander and a Linux Power User",
                "Tech_Skill": "Shell",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Bash, Shell, Linux, Scripting, Cyber Security",
                "outcomeLearning": "Installing and using Linux on your system is the easiest way to avoid viruses and malware. ... However, users can install ClamAV antivirus software in Linux to further secure their systems. The reason for this higher level of security is that since Linux is open-source software, the source code is available for review.\nLinux plays an incredibly important part in the job of cybersecurity professional. Specialized Linux distributions such as Kali Linux are used by cybersecurity professionals to perform in-depth penetration testing and vulnerability assessments, as well as provide forensic analysis after a security breach.\nWhat will students learn in your course: basic Linux command, intermediate Linux command, about flie permissions, about disk management, networking on Linux, sofware management, system administration, Bash Shell Scripting, create a project",
                "provider": "Udemy",
                "duration": "11:21:00",
                "feeVND": "322078.0",
                "URL": "https://www.udemy.com/course/linuxtrainingcourse/",
                "language": "English",
                "rating": "0.0",
                "peopleRating": "0",
                "location": "",
                "level": "Beginner",
                "distance": "",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_103",
                "courseTitle": "HP Application Life Cycle Management (HP ALM)",
                "Tech_Skill": "HP ALM",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Micro Focus, HP ALM, TeamForge, Microsoft Excel",
                "outcomeLearning": "HP ALM includes tools for requirements management, test planning and functional testing, performance testing (when used with Performance Center), developer management (through integration with developer environments such as Collabnet, TeamForge and Microsoft Visual Studio), and defect management.\nBelow are the topics covered\nLecture - 1 Introduction on HP Application Life Cycle Management (HP ALM) 12.5 version\nLecture - 2 Requirements Module\nLecture - 3 Test Plan Module\nLecture - 4 Test Module\nLecture - 5 Defects Module\nLecture - 6 Uploading Test cases using MS Excel\nLecture - 7 Using Reports in HP ALM",
                "provider": "Udemy",
                "duration": "03:50:00",
                "feeVND": "322078.0",
                "URL": "https://bit.ly/3fekNML",
                "language": "English",
                "rating": "3.5",
                "peopleRating": "8",
                "location": "",
                "level": "ALL Levels",
                "distance": "",
                "is_online": "true"
            }
        ],
        "Exception": [
            {
                "lstSkill_Provider": "Appium, Jenkins, Python, Docker, Git, GitHub, Java, Xcode, Amazon Web Services (AWS), IBM Db2, C, XML, Shell, HP ALM",
                "lstSkill_notProvider": "Selenium, Apache Maven, Jira, Apache ANT, Cucumber, Protractor, JUnit, Microsoft Office, Microsoft Visio, SVN, Selenium Grid, Selenium WebDriver, SharePoint, Spring, Struts, TestNG, VersionOne, Sauce Labs, TestLink, File Aid, File Manager, JCL, CANalyser, CANape, CANoe, Perl"
            }
        ],
        "Ngoai_Le": {
            "Course_Offer": [],
            "ExceptionDetail": []
        }
    },
    "courses_offline": {
        "status": 201,
        "message": "frameRemain_Fulltime",
        "Course": [
            {
                "courseID": "COURSE_268",
                "courseTitle": "[HN] Python/Machine Learning",
                "Tech_Skill": "Python",
                "studyTime": "18:00-21:00 (3-5)|08:30-11:30 (7)",
                "studyForm": "Part time",
                "technologySkill": "Python, NumPy, Pandas, Matplotlib, ScikitLearn, Git, Visual Studio Code, PyCharm, Jupyter, Google Colab",
                "outcomeLearning": "Provides you with the most commonly used knowledge and skills and is especially useful for any Machine Learning programmer. Upon completion of this course, you will have the following knowledge and skills: Specific core knowledge of the Python programming language; The data structures provided by Python and the methods available for each of the different data structures: String, List, Dictionary, Tuple, Set.; Compile, debug and execute the program on an IDE (Visual Studio Code, Pycharm...). Install and use Python libraries: Numpy, Pandas, Matplotlib, Scikit-learn. Provides knowledge about common problem types in machine learning, popular machine learning algorithms, and ways to evaluate model performance. A series of Lab exercises associated with the lessons help learners practice and practice skills and apply the knowledge they have learned. The completed student is able to: Be skilled in handling various types of data collected from various sources and aggregated in a form usable for machine learning. Have the skills to observe, analyze and visualize data to help make effective decisions. Understand and effectively apply various machine learning algorithms and technologies to other types of labeled and unlabeled data in practice. Good knowledge of common problem types in machine learning. Understand some of the parameters related to each machine learning algorithm and know how to customize it to improve the performance of the model. Applying and implementing important algorithms of supervised learning (Supervised Learning) and unsupervised learning (Unsupervised learning). Applying and implementing important algorithms belonging to the Recommendation System group. Understanding of precision metrics such as mean square error, confusion matrix, F1 score, R-squared, precision calculation methods and applying appropriate accuracy metrics for each machine learning problem.",
                "provider": "FPT Software Acedemy",
                "duration": "2 months",
                "feeVND": "13900000.0",
                "URL": "https://fsoft-academy.edu.vn/vi/khoa-hoc/hn-pythonmachine-learning-28",
                "language": "Vietnamese, Japanese",
                "rating": "",
                "peopleRating": "",
                "location": "Tòa nhà FPT, 17 Duy Tân, Quận Cầu Giấy, Hà Nội",
                "level": "Beginner",
                "distance": "1.0",
                "is_online": "false"
            },
            {
                "courseID": "COURSE_276",
                "courseTitle": "[HN] IT Fundamentals",
                "Tech_Skill": "C",
                "studyTime": "18:00-21:00 (2 - 4 - 6)",
                "studyForm": "Part time",
                "technologySkill": "MS Windows 10, C, HTML, CSS, JavaScript, Visual Studio Code",
                "outcomeLearning": "",
                "provider": "FPT Software Acedemy",
                "duration": "2 months",
                "feeVND": "13900000.0",
                "URL": "https://fsoft-academy.edu.vn/vi/khoa-hoc/hn-it-fundamentals-41",
                "language": "Vietnamese",
                "rating": "",
                "peopleRating": "",
                "location": "Tòa nhà FPT, 17 Duy Tân, Quận Cầu Giấy, Hà Nội",
                "level": "Beginner",
                "distance": "0.0",
                "is_online": "false"
            }
        ],
        "Exception": [
            {
                "ExceptionType": "Frame_Remain",
                "frame_remain": "18:00-21:00 (2 - 4 - 6), 18:00-21:00 (3-5), 08:30-11:30 (7)"
            },
            {
                "ExceptionType": "Fee",
                "Input": "5000000.0",
                "Output": "27800000.0",
                "Balance": "22800000.0"
            },
            {
                "lstSkill_Provider_ngoaile": "Python, C",
                "lstSkill_notProvider_ngoaile": "Selenium, Apache Maven, Jira, Apache ANT, Cucumber, Protractor, JUnit, Microsoft Office, Microsoft Visio, SVN, Selenium Grid, Selenium WebDriver, SharePoint, Spring, Struts, TestNG, VersionOne, Sauce Labs, TestLink, File Aid, File Manager, JCL, CANalyser, CANape, CANoe, Perl"
            }
        ],
        "Ngoai_Le": {
            "Course_Offer": [],
            "ExceptionDetail": []
        }
    }
}