{
    "courses_online": {
        "status": 200,
        "message": "PASS",
        "Course": [
            {
                "courseID": "COURSE_102",
                "courseTitle": "Learn Google Admob, Analytics, and In App Purchases in Swift",
                "Tech_Skill": "Android, Kotlin, iOS",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "iOS, Google Admob, Swift, Google Analytics, Xcode, SwiftUI, JavaScript, Java, Kotlin, Google Flutter, Objective C, Firebase, Android",
                "outcomeLearning": "Are you an iOS developer and have a passion for making apps?\nAre you looking to make a little money on the side from your apps by installing ads and offering In App Purchases?\nIf so this course is for you!\nIn this course we will be going over:\nHow to setup and install Google Analytics\nHow to setup and install Google Admob\nHow to setup and install In App Purchases\nThis course uses Apple development language Swift to implement these features.\nIf you are a beginner Swift programmer or an experienced one and are looking to add Google Analytics, Google Admob, and In App Purchases into your app than this is the course for you!Are you an iOS developer and have a passion for making apps?\nAre you looking to make a little money on the side from your apps by installing ads and offering In App Purchases?\nIf so this course is for you!\nIn this course we will be going over:\nHow to setup and install Google Analytics\nHow to setup and install Google Admob\nHow to setup and install In App Purchases\nThis course uses Apple development language Swift to implement these features.\nIf you are a beginner Swift programmer or an experienced one and are looking to add Google Analytics, Google Admob, and In App Purchases into your app than this is the course for you!",
                "provider": "Udemy",
                "duration": "00:53:00",
                "feeVND": "322078.0",
                "URL": "https://bit.ly/3fehR2H",
                "language": "English",
                "rating": "3.2",
                "peopleRating": "52",
                "location": "",
                "level": "ALL Levels",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_032",
                "courseTitle": "Back-End Engineer1",
                "Tech_Skill": "HTTP, TDD",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Kubernetes, PostgreSQL, JavaScript, Scrum, OOP, SQL, Oauth, Node.js, HTTP, Express.js, GitHub, Git, Agile, YAGNI, Docker, KISS, Azure DevOps, API, TDD, Design Patterns, RDBMS, DRY, SOLID, Linear Data Structures, Complex Data Structures, Search Algorithm",
                "outcomeLearning": "Setting Up Your Dev Environment. Learn about the field of web development and the tools developers use to create websites. JavaScript Syntax, Part I. Get introduced to JavaScript and get comfortable with the basics of writing JavaScript programs. JavaScript Syntax, Part II. Discover more JavaScript techniques and features including arrays, looping, and objects. Git and Github, Part I. Learn how to use the Git version control system to keep track of changes and document your work. Then learn markdown and publish your first. JavaScript Syntax Portfolio Project. Build a Node.js console app that generates random messages each time a user runs the program and version your project with Git/GitHub. Basics of Back-End Development. Start learning about back-end development and programming servers. JavaScript Syntax, Part III. Understand intermediate JavaScript concepts, such as classes, modules, and error handling. Fundamentals of Operating Systems. Learn about how Operating Systems work. Build a Back-End with Node/Express.js. Learn about the popular back-end environment, Node.js and how to create back-end servers and APIs in JavaScript using the popular Express.js. Test Driven Development with JavaScript. Understand the fundamentals of Test Driven Development (TDD) and how you can apply its principles when developing back-ends. Website Development Fundamentals. Be introduced to the field of front-end web development and create your first web page on the internet. Building Interactive Websites with JavaScript. Understand how JavaScript is used to add interactive experiences to a website. Async JavaScript and HTTP Requests. Learn about APIs (Application Programming Interfaces). Working with APIs will enable you to work with data stored on remote servers. Git and GitHub, Part II. Learn how to use Git and GitHub to collaborate efficiently with developers. Node/Express API Portfolio Project. You can use Node and Express to build an API that allows users to create and manage a personal budget. SQL for Back-End Development. Learn how to create tables, create, retrieve, and update data in SQL databases, and build a data-intensive web app. PostgreSQL Database. Much of the internet is the flow of information. Learn how databases store data so that it can be displayed on the web using PostgreSQL. Designing Relational Databases. Learn how to design relational databases that you can then implement in PostgreSQL advanced PostgreSQL. Learn about database performance and techniques for efficiently accessing data and maintaining optimal performance. Connecting Your Database to a Server\nLearn how to integrate a PostgreSQL database into your application. Deploying Your Server. Learn how to build an API with Node, Express, PostgreSQL and deploy it to Heroku. YAGNI, KISS, and DRY. Learn about different software principles. Object-Oriented Design & SOLID. Learn about object-oriented programming (OOP) and the principles of encapsulation, abstraction, inheritance, polymorphism as well as SOLID. Common Design Patterns. The goal of this unit is to introduce the concept of software design patterns. Software Architectural Patterns. Learn about the concept of architectural patterns as well as learn about specific patterns currently used by the development community. Relational Database and Software Architecture Portfolio Project\nTake your budget app one step further and add a new layer to the project by setting up a database. Security Basics. The goal of this unit is to introduce the basic concepts of web security including common threats, best practices and available technologies. Web Security. Learn intermediate concepts in web security and look at prevention techniques for common threats. Securing Your Server. Identify techniques you can use to secure your applications. Protecting Resources with OAuth. Learn how to protect your resources with authorization and authentication techniques. Database Security. Secure your databases from SQL injections and with security measures specifically for PostgreSQL. Introduction to Enterprise Development. Get an overview of the technologies involved in enterprise development. Caching & CDNs. Learn about how content is stored on different servers with caching and CDNs. Scaling Your Server. Learn different strategies for scaling your server. Alternative Technology Approaches. Get an introduction to several technologies that can expand your understanding of back-end architecture. Agile Methodologies. Learn about Agile methodologies and Scrum. Intro to DevOps Strategies. Learn about Continuous Integration and Continuous Delivery and how to implement them with GitHub Actions. Containerization with Docker. Learn about containerization technology and how to use services like Docker and Kubernetes. Security and Enterprise Portfolio Project. Build an API with Node, Express, and Postgres that uses authentication and authorization best practices to manage an online contest. Linear Data Structures. Begin interview preparation by learning the fundamentals of linear data structures. Complex Data Structures. Continue interview preparation by learning advanced applications of data structures.Algorithms. Continue interview preparation by learning the fundamentals of algorithms. Search & Graph Search Algorithms. Continue interview preparation by learning the fundamentals of search algorithms. Interview Skills. Review some key technical interview topics as well as soft skills which employers are looking for in potential candidates. Final Back-End Portfolio Project. Use everything you've learned in the path to build an API of your choosing.",
                "provider": "Codecademy",
                "duration": "2 months",
                "feeVND": "0.0",
                "URL": "https://www.codecademy.com/learn/paths/back-end-engineer-career-path",
                "language": "English",
                "rating": "4.6",
                "peopleRating": "9794",
                "location": "",
                "level": "Beginner",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_070",
                "courseTitle": "Build Basic Android Apps with Java",
                "Tech_Skill": "Android, Android Studio, XML",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Android, Android Studio, Java, XML, Wireframe, Programming Logic",
                "outcomeLearning": "Android and Java foundations. Wireframe your first app, learn about variables in Java, and dig into the Android Studio IDE. Learn about programming logic in Java and continue to build the Unquote trivia game. Learn about arrays and Loops in Java and continue to build out the Unquote game. Android App Development. Really dig into Android development fundamentals by working with Android Layouts and Views and handling user interactions. intermediate Java and Capstone Project. Pick up more Java programming skills and complete your Unquote application",
                "provider": "Codecademy",
                "duration": "10:00:00",
                "feeVND": "0.0",
                "URL": "https://www.codecademy.com/learn/paths/introduction-to-android-with-java",
                "language": "English",
                "rating": "4.6",
                "peopleRating": "9794",
                "location": "",
                "level": "Beginner",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_104",
                "courseTitle": "Java Programming and Software Engineering Fundamentals Specialization",
                "Tech_Skill": "Android",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Android, Java, HTML, JavaScript, HTML5, Data Structures, Cryptography, Hash Table",
                "outcomeLearning": "Take your first step towards a career in software development with this introduction to Java - one of the most in-demand programming languages and the foundation of the Android operating system. Designed for beginners, this specialization will teach you core programming concepts and equip you to write programs to solve complex problems. In addition, you will gain the foundational skills a software engineer needs to solve real-world problems, from designing algorithms to testing and debugging your programs.",
                "provider": "Coursera",
                "duration": "03:50:00",
                "feeVND": "0.0",
                "URL": "https://www.coursera.org/specializations/java-programming",
                "language": "English, Arabic, French, Portuguese, Italian, Vietnamese, German, Russian, Spanish, Korean",
                "rating": "4.6",
                "peopleRating": "11596",
                "location": "",
                "level": "Beginner",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_118",
                "courseTitle": "Java for Android",
                "Tech_Skill": "Android, Android Studio",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "Android, Java, Android Studio, UI, OOP",
                "outcomeLearning": "This MOOC teaches you how to program core features and classes from the Java programming language that are used in Android, which is the dominant platform for developing and deploying mobile device apps. In particular, this MOOC covers key Java programming language features that control the flow of execution through an app (such as Java's various looping constructs and conditional statements), enable access to structured data (such as Java's built-in arrays and common classes in the Java Collections Framework, such as ArrayList and HashMap), group related operations and data into classes and interfaces (such as Java's primitive and user-defined types, fields, methods, generic parameters, and exceptions), customize the behavior of existing classes via inheritance and polymorphism (such as subclassing and overriding virtual methods). Learners will apply these Java features in the context of core Android components (such as Activities and basic UI elements) by applying common tools (such as Android Studio) needed to develop Java programs and useful Android apps. Learners will work on several hands-on projects throughout the MOOC, i.e., each week will require learners to write solutions to programming assignments that reinforce the material covered in the lecture videos. There will be roughly 4-6 hours of student engagement time per week, including video lectures, quizzes, and programming assignments.",
                "provider": "Coursera",
                "duration": "15:00:00",
                "feeVND": "0.0",
                "URL": "https://www.coursera.org/learn/java-for-android",
                "language": "Arabic, French, Portuguese, Italian, Vietnamese, German, Russian, English, Spanish",
                "rating": "4.5",
                "peopleRating": "2672",
                "location": "",
                "level": "Beginner",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_034",
                "courseTitle": "Full-Stack Software Engineer",
                "Tech_Skill": "TDD",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "JavaScript, PostgreSQL, SQL, API, Node.js, JavaScript, GitHub, Git, TDD, Redux, Express.js, React, CSS, Graph Database, RESTful API, HTML, APIs, Linear Data Structures, Search Algorithm, Neo4J",
                "outcomeLearning": "Welcome to the Full-Stack engineer path. Getting Started with Full-Stack Engineering. Introduction to software engineering. Setting Up Your Dev Environment. Learn about the field of web development and the tools developers use to create websites. JavaScript Syntax, Part I. Get introduced to JavaScript and get comfortable with the basics of writing JavaScript programs. JavaScript Syntax, Part II. Discover more JavaScript techniques and features including arrays, looping, and objects. Git and Github, Part I. Learn how to use the Git version control system to keep track of changes and document your work. Then learn markdown and publish your first. JavaScript Syntax Portfolio Project. Build a Node.js console app that generates random messages each time a user runs the program and version your project with Git/GitHub. Web Development Fundamentals. Be introduced to the field of front-end web development and create your first web page on the internet. Bringing Your Site Online. Learn about different methods for hosting your site, like GitHub pages and how to use a custom domain name. Improved Styling with CSS. Dig deeper into CSS and improve your ability to layout and style websites. Building Interactive Websites with JavaScript. Understand how JavaScript is used to add interactive experiences to a website. Making a Website Responsive. Learn how to create websites that can be viewed on a variety of devices and use different layouts and positioning. Making a Website Accessible. Refactor your website to follow the best accessibility (a11y) practices. HTML, CSS, and JS Portfolio Project. Bring together what you have learned in the previous lessons and build a project off of Codecademy. JavaScript Syntax, Part III. Understand intermediate JavaScript concepts, such as classes, modules, and error handling. Test Driven Development with JavaScript. Be introduced to the fundamentals of Test Driven Development (TDD). Async JavaScript and HTTP Requests. Learn about APIs (Application Programming Interfaces). Working with APIs will enable you to work with data stored on remote servers. Web Apps. Be introduced to web applications and learn about single page applications (SPAs) and how they are different from static websites. React, Part I. Be introduced to the popular JavaScript library, React. React, Part II. Dive further into React and learn about props, state, hooks as well as testing with Jest and Enzyme. Learn Redux, the library most commonly used with React to manage application state. Git and GitHub, Part II. Learn how to use Git and GitHub to collaborate efficiently with developers. React and Redux Portfolio Project. Bring together what you have learned in the previous lessons and build a project off of Codecademy. Basics of Back-End Development. Start learning about back-end development and programming servers. Build a Back-End with Node/Express.js. Learn about the popular back-end environment, Node.js and how to create back-end servers and APIs in JavaScript using the popular Express.js. Back-End and Feature Testing. Learn about TDD techniques for full-stack web applications. SQL for Back-End Development. Learn how to create tables, create, retrieve, and update data in SQL databases, and build a data-intensive web app. PostgreSQL Database. Much of the internet is the flow of information. Learn how databases store data so that it can be displayed on the web using PostgreSQL. Designing Relational Databases. Learn how to design relational databases that you can then implement in PostgreSQL. advanced PostgreSQL. Learn about database performance and techniques for efficiently accessing data and maintaining optimal performance. Back-End Portfolio Project. Build an e-commerce REST API using Node/Express and PostgreSQL. Connecting Front-End to Back-End. Learn about the different ways to combine your front-end and back-end systems to create a cohesive full-stack application. Adding a PostgreSQL Database. Learn PostgreSQL to connect JS and SQL in web apps, and build your first fully-integrated app back-end. Security, Authentication, and Authorization. Learn how to make a web application secure. Advanced Concepts in TDD. Learn advanced Test Driven Development (TDD) concepts that will help to test your web application as a whole. Full-Stack Portfolio Project. Expand the e-commerce REST API with a React client app, creating a PERN (Postgres, Express, React, Node) full-stack e-commerce experience. Linear Data Structures. Begin interview preparation by learning the fundamentals of linear data structures. Complex Data Structures. Continue interview preparation by learning advanced applications of data structures. Continue interview preparation by learning the fundamentals of algorithms. Search & Graph Search Algorithms. Continue interview preparation by learning the fundamentals of search algorithms. Interview Skills. Review some key technical interview topics as well as soft skills which employers are looking for in potential candidates. Final Portfolio Project. Build a PERN app of your choosing and deploy it to Heroku.",
                "provider": "Codecademy",
                "duration": "01:52:00",
                "feeVND": "0.0",
                "URL": "https://www.codecademy.com/learn/paths/full-stack-engineer-career-path",
                "language": "English",
                "rating": "4.6",
                "peopleRating": "9794",
                "location": "",
                "level": "Beginner",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_114",
                "courseTitle": "Developing Android Apps with App Inventor",
                "Tech_Skill": "Android",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "App Inventor, Android",
                "outcomeLearning": "The course will give students hands-on experience in developing interesting Android applications. No previous experience in programming is needed, and the course is suitable for students with any level of computing experience. MIT App Inventor will be used in the course. It is a blocks-based programming tool that allows everyone, even novices, to start programming and build fully functional apps for Android devices. Students are encouraged to use their own Android devices for hands-on testing and exploitation.",
                "provider": "Coursera",
                "duration": "16:00:00",
                "feeVND": "0.0",
                "URL": "https://www.coursera.org/learn/app-inventor-android",
                "language": "Arabic, French, Portuguese, Italian, Vietnamese, German, Russian, English, Spanish",
                "rating": "4.3",
                "peopleRating": "257",
                "location": "",
                "level": "Beginner",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_033",
                "courseTitle": "Front-End Engineer",
                "Tech_Skill": "HTTP, TDD",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "HTML, CSS, JavaScript, React, Redux, TDD, GitHub, Linear Data Structures, HTML, Complex Data Structures, API, HTTP, Search Algorithm, Neo4J, APIs",
                "outcomeLearning": "Introduction to the Front-End Engineer career path. Web Development Fundamentals. Be introduced to the field of front-end web development and create your first web page on the internet. Improved Styling with CSS. Dig deeper into CSS and improve your ability to layout and style websites. Making a Website Responsive. Learn how to create websites that can be viewed on a variety of devices and use different layouts and positioning. JavaScript Syntax, Part I. Get introduced to JavaScript and get comfortable with the basics of writing JavaScript programs. JavaScript Syntax, Part II. Learn additional aspects of the JavaScript language and start writing more complex programs. Building Interactive Websites. Understand how JavaScript is used to add interactive experiences to a website. Making A Website Accessible\nRefactor your website to follow the best accessibility (a11y) practices. CSS Transitions and Animation. Create visually dynamic websites using CSS by utilizing transitions and animation. Command Line, Git, GitHub\nBe introduced to version control, the best practice for maintaining a web development project, and a useful skill for all programmers. HTML, CSS, and JS Portfolio Project. Bring together what you have learned in the previous lessons and build a project off of Codecademy. JavaScript Syntax, Part III. Understand intermediate JavaScript concepts, such as classes, modules, and error handling. TDD Fundamentals. Be introduced to the fundamentals of Test Driven Development (TDD). Async JavaScript and HTTP Requests. Learn about APIs (Application Programming Interfaces). Working with APIs will enable you to work with data stored on remote servers. Web Apps. Be introduced to web applications and learn about single page applications (SPAs) and how they are different from static websites. React, Part I. Be introduced to the popular JavaScript library, React. React, Part II. Dive further into React and learn about props, state, hooks as well as testing with Jest and Enzyme. Redux. Learn Redux, the library most commonly used with React to manage application state. Advanced Concepts in TDD. Learn advanced Test Driven Development (TDD) concepts that will help to test your web application as a whole. React and Redux Portfolio Project. Bring together what you have learned in the previous lessons and build a project off of Codecademy. Advanced Web Development. Learn advanced web development concepts and tools that will help you take your web applications to the next level. Linear Data Structures. Begin interview preparation by learning the fundamentals of linear data structures. Complex Data Structures. Continue interview preparation by learning advanced applications of data structures. Continue interview preparation by learning the fundamentals of algorithms. Search & Graph Search Algorithms. Continue interview preparation by learning the fundamentals of search algorithms. Interview Skills. Review some key technical interview topics as well as soft skills which employers are looking for in potential candidates. Final Front-End Portfolio Project. Bring together what you have learned in the previous lessons and build a project off of Codecademy.",
                "provider": "Codecademy",
                "duration": "14:00:00",
                "feeVND": "0.0",
                "URL": "https://www.codecademy.com/learn/paths/front-end-engineer-career-path",
                "language": "English",
                "rating": "4.6",
                "peopleRating": "9794",
                "location": "",
                "level": "Beginner",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_146",
                "courseTitle": "Full Stack Web Application Development with Django Framework",
                "Tech_Skill": "HTTP",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "HTML5, Bootstrap, jQuery, Django, HTTP, JavaScript, CSS, CRUD, RESTful API, Jquery, HTML",
                "outcomeLearning": "Use Django to build powerful, robust, and dynamic web apps.\nPursue a successful career in full stack web development with Django skills.\nGain end-to-end knowledge of Django concepts and be able to apply them.\nDjango introduction & installation.\nHTML5, CSS, JavaScript, jQuery, Bootstrap.\nCreate your first project in Django.\nCreate your first application in Django.\nFunction-based views and class-based generic views.\nTemplate files and static files.\nInjecting dynamic content from view to template.\nDjango Template Language.\nDjango admin interface & customization.\nModels, form handling, redirecting in Django.\nSending emails in Django.\nWork with different types of HTTP methods.\nCRUD operations using Web API without REST framework.\nDjango REST API application.\nDjango Database API.",
                "provider": "Udemy",
                "duration": "17:39:00",
                "feeVND": "322078.0",
                "URL": "https://www.udemy.com/course/django-python-web-framework/",
                "language": "English",
                "rating": "4.3",
                "peopleRating": "246",
                "location": "",
                "level": "ALL Levels",
                "is_online": "true"
            },
            {
                "courseID": "COURSE_187",
                "courseTitle": "Learn SQL Basics for Data Science Specialization",
                "Tech_Skill": "SQLite",
                "studyTime": "",
                "studyForm": "",
                "technologySkill": "SQL, Azure Databricks, Apache Spark, Delta Lake, SQLite, A/B Testing, Query String, Predictive Analytics, Creating Metrics, EDA",
                "outcomeLearning": "Use SQL commands to filter, sort, & summarize data; manipulate strings, dates, & numerical data from different sources for analysis. A​ssess and create datasets to solve your business questions and problems using SQL. U​se the collaborative Databricks workspace and create an end-to-end pipeline that reads data, transforms it, and saves the result. ​Develop a project proposal & select your data, perform statistical analysis & develop metrics, and p​resent your findings & make recommendations.",
                "provider": "Coursera",
                "duration": "20:00:00",
                "feeVND": "0.0",
                "URL": "https://www.coursera.org/specializations/learn-sql-basics-data-science",
                "language": "English, Arabic, French, Portuguese, Italian, Vietnamese, German, Russian, Spanish, Chinese",
                "rating": "4.5",
                "peopleRating": "4969",
                "location": "",
                "level": "Beginner",
                "is_online": "true"
            }
        ],
        "Exception": [
            {
                "lstSkill_Provider": "Android, Kotlin, iOS, HTTP, TDD, Android Studio, XML, SQLite",
                "lstSkill_notProvider": "Android SDK, MVP, RxJava, SOAP, C++, Dagger, MVVM, Retrofit, FCM, GitLab, Gitflow, Google Maps, React Native, Android Native (NDK), AVN, Google Colab, UML, VLM, Gerrit, Kotlin Coroutines, Dependency Injection, LiveData, MVC, ViewModel, Google Cloud, Butter Knife, Gson"
            }
        ],
        "Ngoai_Le": {
            "Course_Offer": [],
            "ExceptionDetail": []
        }
    },
    "courses_offline": {
        "status": 201,
        "message": "frameRemain_Fulltime",
        "Course": [
            {
                "courseID": "COURSE_264",
                "courseTitle": "[HN] Fullstack .Net Web Developer",
                "Tech_Skill": "MVC",
                "studyTime": "08:00-17:00 (2 - 4 - 6)|08:00-17:00 (7 days a week)",
                "studyForm": "Full time",
                "technologySkill": "C#, OOP, LinQ, SQL, JavaScript, HTML5, CSS3, Entity Framework, ASP.NET, MVC, Nunit, jQuery, Bootstrap 4, SVN, Git, Visual Studio Code, Microsoft SQL Server, Nugget, IIS",
                "outcomeLearning": "Provides you with the knowledge and skills to work with Relational Databases. Proficiently use the features provided by the .Net programming language/standard library. Provides you with knowledge and skills commonly used to develop Web Application projects, including: HTML5, CSS3, JavaScripts and the popular front-end web library Bootstrap4. Provides you with core knowledge of Entity Framework. Help learners perfect the most complete skills to be able to grasp the process of developing a .Net Web project, directing students to the technology of website development and building the fastest application using Frameworks.",
                "provider": "FPT Software Acedemy",
                "duration": "437 hours",
                "feeVND": "24900000.0",
                "URL": "https://fsoft-academy.edu.vn/vi/khoa-hoc/hn-fullstack-net-web-developer-23",
                "language": "Vietnamese",
                "rating": "",
                "peopleRating": "",
                "location": "Ha Noi, Cau Giay, Duy Tan",
                "level": "Beginner",
                "is_online": "false"
            },
            {
                "courseID": "COURSE_268",
                "courseTitle": "[HN] Python/Machine Learning",
                "Tech_Skill": "Google Colab",
                "studyTime": "18:00-21:00 (3 - 5)|08:30-11:30 (7)",
                "studyForm": "Part time",
                "technologySkill": "Python, NumPy, Pandas, Matplotlib, ScikitLearn, Git, Visual Studio Code, PyCharm, Jupyter, Google Colab",
                "outcomeLearning": "Provides you with the most commonly used knowledge and skills and is especially useful for any Machine Learning programmer. Upon completion of this course, you will have the following knowledge and skills: Specific core knowledge of the Python programming language; The data structures provided by Python and the methods available for each of the different data structures: String, List, Dictionary, Tuple, Set.; Compile, debug and execute the program on an IDE (Visual Studio Code, Pycharm...). Install and use Python libraries: Numpy, Pandas, Matplotlib, Scikit-learn. Provides knowledge about common problem types in machine learning, popular machine learning algorithms, and ways to evaluate model performance. A series of Lab exercises associated with the lessons help learners practice and practice skills and apply the knowledge they have learned. The completed student is able to: Be skilled in handling various types of data collected from various sources and aggregated in a form usable for machine learning. Have the skills to observe, analyze and visualize data to help make effective decisions. Understand and effectively apply various machine learning algorithms and technologies to other types of labeled and unlabeled data in practice. Good knowledge of common problem types in machine learning. Understand some of the parameters related to each machine learning algorithm and know how to customize it to improve the performance of the model. Applying and implementing important algorithms of supervised learning (Supervised Learning) and unsupervised learning (Unsupervised learning). Applying and implementing important algorithms belonging to the Recommendation System group. Understanding of precision metrics such as mean square error, confusion matrix, F1 score, R-squared, precision calculation methods and applying appropriate accuracy metrics for each machine learning problem.",
                "provider": "FPT Software Acedemy",
                "duration": "2 months",
                "feeVND": "13900000.0",
                "URL": "https://fsoft-academy.edu.vn/vi/khoa-hoc/hn-pythonmachine-learning-28",
                "language": "Vietnamese, Japanese",
                "rating": "",
                "peopleRating": "",
                "location": "Ha Noi, Cau Giay, Duy Tan",
                "level": "Beginner",
                "is_online": "false"
            }
        ],
        "Exception": [
            {
                "ExceptionType": "Frame_Remain",
                "frame_remain": "08:00-17:00 (2 - 4 - 6)|08:00-17:00 (7 days a week), 18:00-21:00 (3 - 5)|08:30-11:30 (7)"
            },
            {
                "ExceptionType": "Fee",
                "Input": "5000000.0",
                "Output": "38800000.0",
                "Balance": "33800000.0"
            },
            {
                "ExceptionType": "Duration",
                "Input": "3 days, 0:00:00",
                "Output": "78 days, 5:00:00",
                "Balance": "75 days, 5:00:00"
            },
            {
                "lstSkill_Provider_ngoaile": "MVC, Google Colab",
                "lstSkill_notProvider_ngoaile": "Android SDK, MVP, RxJava, SOAP, C++, Dagger, MVVM, Retrofit, FCM, GitLab, Gitflow, Google Maps, React Native, Android Native (NDK), AVN, UML, VLM, Gerrit, Kotlin Coroutines, Dependency Injection, LiveData, ViewModel, Google Cloud, Butter Knife, Gson"
            }
        ],
        "Ngoai_Le": {
            "Course_Offer": [],
            "ExceptionDetail": []
        }
    }
}